{"version":3,"file":"static/chunks/pages/device-info-6f157a93cb66ddd9.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./src/pages/device-info.tsx","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.101.1_2zx2umvpluuhvlq44va5bta2da/node_modules/@fluentui/react/lib/components/src/components/MessageBar/MessageBar.base.tsx","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.101.1_2zx2umvpluuhvlq44va5bta2da/node_modules/@fluentui/react/lib/components/src/components/MessageBar/MessageBar.styles.ts","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.101.1_2zx2umvpluuhvlq44va5bta2da/node_modules/@fluentui/react/lib/components/src/components/MessageBar/MessageBar.tsx","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.101.1_2zx2umvpluuhvlq44va5bta2da/node_modules/@fluentui/react/lib/components/src/components/MessageBar/MessageBar.types.ts","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+utilities@8.13.4_fan5qbzahqtxlm5dzefqlqx5ia/node_modules/@fluentui/utilities/src/DelayedRender.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/device-info\",\n      function () {\n        return require(\"private-next-pages/device-info.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/device-info\"])\n      });\n    }\n  ","import { Icon, MessageBar, Separator, Stack, TooltipHost } from \"@fluentui/react\";\nimport { AdbFeatures } from \"@yume-chan/adb\";\nimport { observer } from 'mobx-react-lite';\nimport type { NextPage } from 'next';\nimport Head from 'next/head';\nimport React from \"react\";\nimport { ExternalLink } from \"../components\";\nimport { GlobalState } from '../state';\nimport { Icons, RouteStackProps } from \"../utils\";\n\nconst KNOWN_FEATURES: Record<string, string> = {\n    [AdbFeatures.ShellV2]: `\"shell\" command now supports separating child process's stdout and stderr, and returning exit code`,\n    // 'cmd': '',\n    [AdbFeatures.StatV2]: '\"sync\" command now supports \"STA2\" (returns more information of a file than old \"STAT\") and \"LST2\" (returns information of a directory) sub command',\n    [AdbFeatures.ListV2]: '\"sync\" command now supports \"LST2\" sub command which returns more information when listing a directory than old \"LIST\"',\n    [AdbFeatures.FixedPushMkdir]: 'Android 9 (P) introduced a bug that pushing files to a non-existing directory would fail. This feature indicates it\\'s fixed (Android 10)',\n    // 'apex': '',\n    // 'abb': '',\n    // 'fixed_push_symlink_timestamp': '',\n    'abb_exec': 'Support \"exec\" command which can stream stdin into child process',\n    // 'remount_shell': '',\n    // 'track_app': '',\n    // 'sendrecv_v2': '',\n    // 'sendrecv_v2_brotli': '',\n    // 'sendrecv_v2_lz4': '',\n    // 'sendrecv_v2_zstd': '',\n    // 'sendrecv_v2_dry_run_send': '',\n};\n\nconst DeviceInfo: NextPage = () => {\n\n    return (\n        <Stack {...RouteStackProps}>\n            <Head>\n                <title>Device Info</title>\n            </Head>\n\n            <MessageBar>\n\n            </MessageBar>\n            <span>\n                <span>Protocol Version: </span>\n                <code>{GlobalState.device?.protocolVersion?.toString(16).padStart(8, '0')}</code>\n            </span>\n            <Separator />\n\n            <MessageBar>\n            </MessageBar>\n            <span>Product Name: {GlobalState.device?.product}</span>\n            <Separator />\n\n            <MessageBar>\n            </MessageBar>\n            <span>Model Name: {GlobalState.device?.model}</span>\n            <Separator />\n\n            <MessageBar>\n            </MessageBar>\n            <span>Device Name: {GlobalState.device?.device}</span>\n            <Separator />\n\n            <MessageBar>\n            </MessageBar>\n            <span>\n                <span>Features: </span>\n                {GlobalState.device?.features?.map((feature, index) => (\n                    <span key={feature}>\n                        {index !== 0 && (<span>, </span>)}\n                        <span>{feature}</span>\n                        {KNOWN_FEATURES[feature] && (\n                            <TooltipHost content={<span>{KNOWN_FEATURES[feature]}</span>}>\n                                <Icon style={{ marginLeft: 4 }} iconName={Icons.Info} />\n                            </TooltipHost>\n                        )}\n                    </span>\n                ))}\n            </span>\n        </Stack>\n    );\n};\n\nexport default observer(DeviceInfo);\n","import * as React from 'react';\nimport { DelayedRender, classNamesFunction, getNativeProps, htmlElementProperties, css } from '../../Utilities';\nimport { IconButton } from '../../Button';\nimport { Icon } from '../../Icon';\nimport { MessageBarType } from './MessageBar.types';\nimport { useId, useBoolean } from '@fluentui/react-hooks';\nimport type { IMessageBarProps, IMessageBarStyleProps, IMessageBarStyles } from './MessageBar.types';\n\nconst ICON_MAP = {\n  [MessageBarType.info]: 'Info',\n  [MessageBarType.warning]: 'Info',\n  [MessageBarType.error]: 'ErrorBadge',\n  [MessageBarType.blocked]: 'Blocked2',\n  [MessageBarType.severeWarning]: 'Warning',\n  [MessageBarType.success]: 'Completed',\n};\n\nconst COMPONENT_NAME = 'MessageBar';\n\nconst getClassNames = classNamesFunction<IMessageBarStyleProps, IMessageBarStyles>();\n\nconst getAnnouncementPriority = (messageBarType: MessageBarType): 'assertive' | 'polite' => {\n  switch (messageBarType) {\n    case MessageBarType.blocked:\n    case MessageBarType.error:\n    case MessageBarType.severeWarning:\n      return 'assertive';\n  }\n  return 'polite';\n};\n\nconst getRole = (messageBarType: MessageBarType): 'alert' | 'status' => {\n  switch (messageBarType) {\n    case MessageBarType.blocked:\n    case MessageBarType.error:\n    case MessageBarType.severeWarning:\n      return 'alert';\n  }\n  return 'status';\n};\n\nexport const MessageBarBase: React.FunctionComponent<IMessageBarProps> = React.forwardRef<\n  HTMLDivElement,\n  IMessageBarProps\n>((props, ref) => {\n  const [expandSingleLine, { toggle: toggleExpandSingleLine }] = useBoolean(false);\n  const labelId = useId('MessageBar');\n\n  const {\n    actions,\n    className,\n    children,\n    // eslint-disable-next-line deprecation/deprecation\n    overflowButtonAriaLabel,\n    dismissIconProps,\n    styles,\n    theme,\n    messageBarType = MessageBarType.info,\n    onDismiss = undefined,\n    isMultiline = true,\n    truncated,\n    dismissButtonAriaLabel,\n    messageBarIconProps,\n    role,\n    delayedRender = true,\n    expandButtonProps,\n  } = props;\n\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLSpanElement>>(props, htmlElementProperties, [\n    'className',\n    'role',\n  ]);\n\n  const classNames: { [key in keyof IMessageBarStyles]: string } = getClassNames(styles, {\n    theme: theme!,\n    messageBarType: messageBarType || MessageBarType.info,\n    onDismiss: onDismiss !== undefined,\n    actions: actions !== undefined,\n    truncated: truncated,\n    isMultiline: isMultiline,\n    expandSingleLine: expandSingleLine,\n    className,\n  });\n\n  const expandIconProps = { iconName: expandSingleLine ? 'DoubleChevronUp' : 'DoubleChevronDown' };\n  const regionProps = actions || onDismiss ? { 'aria-describedby': labelId, role: 'region' } : {};\n  const actionsDiv = actions ? <div className={classNames.actions}>{actions}</div> : null;\n\n  const dismissButton = onDismiss ? (\n    <IconButton\n      disabled={false}\n      className={classNames.dismissal}\n      onClick={onDismiss}\n      iconProps={dismissIconProps ? dismissIconProps : { iconName: 'Clear' }}\n      title={dismissButtonAriaLabel}\n      ariaLabel={dismissButtonAriaLabel}\n    />\n  ) : null;\n\n  return (\n    <div ref={ref} className={classNames.root} {...regionProps}>\n      <div className={classNames.content}>\n        <div className={classNames.iconContainer} aria-hidden>\n          {messageBarIconProps ? (\n            <Icon {...messageBarIconProps} className={css(classNames.icon, messageBarIconProps.className)} />\n          ) : (\n            <Icon iconName={ICON_MAP[messageBarType!]} className={classNames.icon} />\n          )}\n        </div>\n        <div\n          className={classNames.text}\n          id={labelId}\n          role={role || getRole(messageBarType)}\n          aria-live={getAnnouncementPriority(messageBarType)}\n        >\n          <span className={classNames.innerText} {...nativeProps}>\n            {delayedRender ? (\n              <DelayedRender>\n                <span>{children}</span>\n              </DelayedRender>\n            ) : (\n              // this span is probably not necessary, but preserving it for now in case anyone\n              // has styling that expects it to be present\n              <span>{children}</span>\n            )}\n          </span>\n        </div>\n        {\n          /* singleline expand/collapse button */ !isMultiline && !actionsDiv && truncated && (\n            <div className={classNames.expandSingleLine}>\n              <IconButton\n                disabled={false}\n                className={classNames.expand}\n                onClick={toggleExpandSingleLine}\n                iconProps={expandIconProps}\n                ariaLabel={overflowButtonAriaLabel}\n                aria-expanded={expandSingleLine}\n                {...expandButtonProps}\n              />\n            </div>\n          )\n        }\n        {/* singleline actions */ !isMultiline && actionsDiv}\n        {\n          /* singleline dismiss */ !isMultiline && dismissButton && (\n            <div className={classNames.dismissSingleLine}>{dismissButton}</div>\n          )\n        }\n        {/* multiline dismiss */ isMultiline && dismissButton}\n      </div>\n      {/* multiline actions */ isMultiline && actionsDiv}\n    </div>\n  );\n});\nMessageBarBase.displayName = COMPONENT_NAME;\n","import {\n  HighContrastSelector,\n  ScreenWidthMaxSmall,\n  getScreenSelector,\n  getGlobalClassNames,\n  getFocusStyle,\n  IconFontSizes,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport { MessageBarType } from './MessageBar.types';\nimport type { IStyle, ISemanticColors } from '../../Styling';\nimport type { IMessageBarStyleProps, IMessageBarStyles } from './MessageBar.types';\n\nconst GlobalClassNames = {\n  root: 'ms-MessageBar',\n  error: 'ms-MessageBar--error',\n  blocked: 'ms-MessageBar--blocked',\n  severeWarning: 'ms-MessageBar--severeWarning',\n  success: 'ms-MessageBar--success',\n  warning: 'ms-MessageBar--warning',\n  multiline: 'ms-MessageBar-multiline',\n  singleline: 'ms-MessageBar-singleline',\n  dismissalSingleLine: 'ms-MessageBar-dismissalSingleLine',\n  expandingSingleLine: 'ms-MessageBar-expandingSingleLine',\n  content: 'ms-MessageBar-content',\n  iconContainer: 'ms-MessageBar-icon',\n  text: 'ms-MessageBar-text',\n  innerText: 'ms-MessageBar-innerText',\n  dismissSingleLine: 'ms-MessageBar-dismissSingleLine',\n  expandSingleLine: 'ms-MessageBar-expandSingleLine',\n  dismissal: 'ms-MessageBar-dismissal',\n  expand: 'ms-MessageBar-expand',\n  actions: 'ms-MessageBar-actions',\n  actionsSingleline: 'ms-MessageBar-actionsSingleLine',\n};\n\nconst backgroundColor: { [key: string]: keyof ISemanticColors } = {\n  [MessageBarType.error]: 'errorBackground',\n  [MessageBarType.blocked]: 'errorBackground',\n  [MessageBarType.success]: 'successBackground',\n  [MessageBarType.warning]: 'warningBackground',\n  [MessageBarType.severeWarning]: 'severeWarningBackground',\n  [MessageBarType.info]: 'infoBackground',\n};\n\nconst highContrastBackgroundColor: { [key: string]: string } = {\n  [MessageBarType.error]: 'rgba(255, 0, 0, 0.3)',\n  [MessageBarType.blocked]: 'rgba(255, 0, 0, 0.3)',\n  [MessageBarType.success]: 'rgba(48, 241, 73, 0.3)',\n  [MessageBarType.warning]: 'rgba(255, 254, 57, 0.3)',\n  [MessageBarType.severeWarning]: 'rgba(255, 0, 0, 0.3)',\n  [MessageBarType.info]: 'Window',\n};\n\nconst iconColor: { [key: string]: keyof ISemanticColors } = {\n  [MessageBarType.error]: 'errorIcon',\n  [MessageBarType.blocked]: 'errorIcon',\n  [MessageBarType.success]: 'successIcon',\n  [MessageBarType.warning]: 'warningIcon',\n  [MessageBarType.severeWarning]: 'severeWarningIcon',\n  [MessageBarType.info]: 'infoIcon',\n};\n\nexport const getStyles = (props: IMessageBarStyleProps): IMessageBarStyles => {\n  const {\n    theme,\n    className,\n    onDismiss,\n    truncated,\n    isMultiline,\n    expandSingleLine,\n    messageBarType = MessageBarType.info,\n  } = props;\n  const { semanticColors, fonts } = theme;\n\n  const SmallScreenSelector = getScreenSelector(0, ScreenWidthMaxSmall);\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const dismissalAndExpandIconStyle: IStyle = {\n    fontSize: IconFontSizes.xSmall,\n    height: 10,\n    lineHeight: '10px',\n    color: semanticColors.messageText,\n    selectors: {\n      [HighContrastSelector]: {\n        ...getHighContrastNoAdjustStyle(),\n        color: 'WindowText',\n      },\n    },\n  };\n\n  const dismissalAndExpandStyle: IStyle = [\n    getFocusStyle(theme, {\n      inset: 1,\n      highContrastStyle: {\n        outlineOffset: '-6px',\n        outline: '1px solid Highlight',\n      },\n      borderColor: 'transparent',\n    }),\n    {\n      flexShrink: 0,\n      width: 32,\n      height: 32,\n      padding: '8px 12px',\n      selectors: {\n        '& .ms-Button-icon': dismissalAndExpandIconStyle,\n        ':hover': {\n          backgroundColor: 'transparent',\n        },\n        ':active': {\n          backgroundColor: 'transparent',\n        },\n      },\n    },\n  ];\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      messageBarType === MessageBarType.error && classNames.error,\n      messageBarType === MessageBarType.blocked && classNames.blocked,\n      messageBarType === MessageBarType.severeWarning && classNames.severeWarning,\n      messageBarType === MessageBarType.success && classNames.success,\n      messageBarType === MessageBarType.warning && classNames.warning,\n      isMultiline ? classNames.multiline : classNames.singleline,\n      !isMultiline && onDismiss && classNames.dismissalSingleLine,\n      !isMultiline && truncated && classNames.expandingSingleLine,\n      {\n        background: semanticColors[backgroundColor[messageBarType]],\n        color: semanticColors.messageText,\n        minHeight: 32,\n        width: '100%',\n        display: 'flex',\n        wordBreak: 'break-word',\n        selectors: {\n          '.ms-Link': {\n            color: semanticColors.messageLink,\n            selectors: {\n              ':hover': {\n                color: semanticColors.messageLinkHovered,\n              },\n            },\n          },\n          [HighContrastSelector]: {\n            ...getHighContrastNoAdjustStyle(),\n            background: highContrastBackgroundColor[messageBarType],\n            border: '1px solid WindowText',\n            color: 'WindowText',\n          },\n        },\n      },\n      isMultiline && {\n        flexDirection: 'column',\n      },\n      className,\n    ],\n    content: [\n      classNames.content,\n      {\n        display: 'flex',\n        width: '100%',\n        lineHeight: 'normal',\n      },\n    ],\n    iconContainer: [\n      classNames.iconContainer,\n      {\n        fontSize: IconFontSizes.medium,\n        minWidth: 16,\n        minHeight: 16,\n        display: 'flex',\n        flexShrink: 0,\n        margin: '8px 0 8px 12px',\n      },\n    ],\n    icon: {\n      color: semanticColors[iconColor[messageBarType]],\n      selectors: {\n        [HighContrastSelector]: {\n          ...getHighContrastNoAdjustStyle(),\n          color: 'WindowText',\n        },\n      },\n    },\n    text: [\n      classNames.text,\n      {\n        minWidth: 0,\n        display: 'flex',\n        flexGrow: 1,\n        margin: 8,\n        ...fonts.small,\n        selectors: {\n          [HighContrastSelector]: {\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n      !onDismiss && {\n        marginRight: 12,\n      },\n    ],\n    innerText: [\n      classNames.innerText,\n      {\n        lineHeight: 16,\n        selectors: {\n          '& span a:last-child': {\n            paddingLeft: 4,\n          },\n        },\n      },\n      truncated && {\n        overflow: 'visible',\n        whiteSpace: 'pre-wrap',\n      },\n      !isMultiline && {\n        // In high contrast this causes the top and bottom of links' focus outline to be clipped\n        // (not sure of a good way around that while still maintaining text clipping)\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n      },\n      !isMultiline &&\n        !truncated && {\n          selectors: {\n            [SmallScreenSelector]: {\n              overflow: 'visible',\n              whiteSpace: 'pre-wrap',\n            },\n          },\n        },\n      expandSingleLine && {\n        overflow: 'visible',\n        whiteSpace: 'pre-wrap',\n      },\n    ],\n    dismissSingleLine: classNames.dismissSingleLine,\n    expandSingleLine: classNames.expandSingleLine,\n    dismissal: [classNames.dismissal, dismissalAndExpandStyle],\n    expand: [classNames.expand, dismissalAndExpandStyle],\n    actions: [\n      isMultiline ? classNames.actions : classNames.actionsSingleline,\n      {\n        display: 'flex',\n        flexGrow: 0,\n        flexShrink: 0,\n        flexBasis: 'auto',\n        flexDirection: 'row-reverse',\n        alignItems: 'center',\n        margin: '0 12px 0 8px',\n        // reset forced colors to browser control for inner actions\n        forcedColorAdjust: 'auto',\n        MsHighContrastAdjust: 'auto',\n        selectors: {\n          '& button:nth-child(n+2)': {\n            marginLeft: 8,\n          },\n        },\n      },\n      isMultiline && {\n        marginBottom: 8,\n      },\n      onDismiss &&\n        !isMultiline && {\n          marginRight: 0,\n        },\n    ],\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { MessageBarBase } from './MessageBar.base';\nimport { getStyles } from './MessageBar.styles';\nimport type { IMessageBarProps, IMessageBarStyleProps, IMessageBarStyles } from './MessageBar.types';\n\nexport const MessageBar: React.FunctionComponent<IMessageBarProps> = styled<\n  IMessageBarProps,\n  IMessageBarStyleProps,\n  IMessageBarStyles\n>(MessageBarBase, getStyles, undefined, {\n  scope: 'MessageBar',\n});\n","import * as React from 'react';\nimport { BaseButton, Button, IButtonProps } from '../../Button';\nimport type { ITheme, IStyle } from '../../Styling';\nimport type { IRefObject, IStyleFunctionOrObject } from '../../Utilities';\nimport type { IIconProps } from '../../Icon';\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBar {}\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBarProps extends React.HTMLAttributes<HTMLElement>, React.RefAttributes<HTMLDivElement> {\n  /**\n   * Optional callback to access the IMessageBar interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<IMessageBar>;\n\n  /**\n   * The type of MessageBar to render.\n   * @defaultvalue MessageBarType.info\n   */\n  messageBarType?: MessageBarType;\n\n  /**\n   * The actions you want to show on the other side.\n   */\n  actions?: JSX.Element;\n\n  /**\n   * A description of the message bar for the benefit of screen readers.\n   * @deprecated Use native prop `aria-label` instead.\n   */\n  ariaLabel?: string;\n\n  /**\n   * Whether the message bar has a dismiss button and its callback.\n   * If null, we don't show a dismiss button.\n   * @defaultvalue null\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  onDismiss?: (ev?: React.MouseEvent<HTMLElement | BaseButton | Button>) => any;\n\n  /**\n   * Determines if the message bar is multi lined.\n   * If false, and the text overflows over buttons or to another line, it is clipped.\n   * @defaultvalue true\n   */\n  isMultiline?: boolean;\n\n  /**\n   * Aria label on dismiss button if onDismiss is defined.\n   */\n  dismissButtonAriaLabel?: string;\n\n  /**\n   * Determines if the message bar text is truncated.\n   * If true, a button will render to toggle between a single line view and multiline view.\n   * This prop is for single line message bars with no buttons only in a limited space scenario.\n   * @defaultvalue false\n   */\n  truncated?: boolean;\n\n  /**\n   * Aria label on overflow button if truncated is defined.\n   * @deprecated Use `expandButtonProps` instead.\n   */\n  overflowButtonAriaLabel?: string;\n\n  /**\n   * Additional CSS class(es) to apply to the MessageBar.\n   */\n  className?: string;\n\n  /**\n   * Theme (provided through customization.)\n   */\n  theme?: ITheme;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<IMessageBarStyleProps, IMessageBarStyles>;\n\n  /**\n   * Custom icon prop to replace the dismiss icon.\n   * If unset, default will be the Fabric Clear icon.\n   */\n  dismissIconProps?: IIconProps;\n\n  /**\n   * Custom icon prop to replace the message bar icon.\n   * If unset, default will be the icon set by messageBarType.\n   */\n  messageBarIconProps?: IIconProps;\n\n  /**\n   *  Button props that can be applied to the expand button of the MessageBar.\n   */\n  expandButtonProps?: IButtonProps;\n\n  /**\n   * Custom role to apply to the MessageBar.\n   * @defaultvalue `alert` if `messageBarType` is `error`, `blocked`, or `severeWarning`;\n   * or `status` otherwise\n   */\n  role?: 'alert' | 'status' | 'none';\n\n  /**\n   * By default, MessageBar delay-renders its content within an internal live region to help ensure\n   * it's announced by screen readers. You can disable that behavior by setting this prop to `false`.\n   *\n   * If you set this prop to `false`, to ensure proper announcement you should either:\n   * - If appropriate, ensure that the `role` prop is set to `alert` (this will be done by default\n   *   if `messageBarType` is `error`, `blocked`, or `severeWarning`), OR\n   * - Set the `role` prop to `none` (to avoid nested `status` regions), wrap the whole MessageBar\n   *   in a `<div role=\"status\">` which is always rendered, and ensure that the MessageBar is\n   *   rendered either conditionally or with a delay.\n   * @default true\n   */\n  delayedRender?: boolean;\n}\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBarStyleProps {\n  /**\n   * Theme (provided through customization).\n   */\n  theme: ITheme;\n\n  /**\n   * Additional CSS class(es).\n   */\n  className?: string;\n\n  /**\n   * Type of the MessageBar.\n   */\n  messageBarType?: MessageBarType;\n\n  /**\n   * Whether the MessageBar contains a dismiss button.\n   */\n  onDismiss?: boolean;\n\n  /**\n   * Whether the text is truncated.\n   */\n  truncated?: boolean;\n\n  /**\n   * Whether the MessageBar is rendered in multi line (as opposed to single line) mode.\n   */\n  isMultiline?: boolean;\n\n  /**\n   * Whether the single line MessageBar is being expanded.\n   */\n  expandSingleLine?: boolean;\n\n  /**\n   * Whether the MessageBar contains any action elements.\n   */\n  actions?: boolean;\n}\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBarStyles {\n  /**\n   * Style set for the root element.\n   */\n  root?: IStyle;\n\n  /**\n   * Style set for the element containing the icon, text, and optional dismiss button.\n   */\n  content?: IStyle;\n\n  /**\n   * Style set for the element containing the icon.\n   */\n  iconContainer?: IStyle;\n\n  /**\n   * Style set for the icon.\n   */\n  icon?: IStyle;\n\n  /**\n   * Style set for the element containing the text.\n   */\n  text?: IStyle;\n\n  /**\n   * Style set for the text.\n   */\n  innerText?: IStyle;\n\n  /**\n   * Style set for the optional dismiss button.\n   */\n  dismissal?: IStyle;\n\n  /**\n   * Style set for the icon used to expand and collapse the MessageBar.\n   */\n  expand?: IStyle;\n\n  /**\n   * Style set for the element containing the dismiss button.\n   */\n  dismissSingleLine?: IStyle;\n\n  /**\n   * Style set for the element containing the expand icon.\n   */\n  expandSingleLine?: IStyle;\n\n  /**\n   * Style set for the optional element containing the action elements.\n   */\n  actions?: IStyle;\n}\n\n/**\n * {@docCategory MessageBar}\n */\nexport enum MessageBarType {\n  /** Info styled MessageBar */\n  info = 0,\n  /** Error styled MessageBar */\n  error = 1,\n  /** Blocked styled MessageBar */\n  blocked = 2,\n  /** SevereWarning styled MessageBar */\n  severeWarning = 3,\n  /** Success styled MessageBar */\n  success = 4,\n  /** Warning styled MessageBar */\n  warning = 5,\n}\n","import * as React from 'react';\nimport { getWindow } from './dom/getWindow';\n\n/**\n * DelayedRender component props.\n *\n * @public\n */\n// eslint-disable-next-line deprecation/deprecation\nexport interface IDelayedRenderProps extends React.Props<{}> {\n  /**\n   * Number of milliseconds to delay rendering children.\n   */\n  delay?: number;\n}\n\n/**\n * DelayedRender component state.\n *\n * @internal\n */\nexport interface IDelayedRenderState {\n  /**\n   * Whether the component is rendered or not.\n   */\n  isRendered: boolean;\n}\n\n/**\n * Utility component for delaying the render of a child component after a given delay. This component\n * requires a single child component; don't pass in many components. Wrap multiple components in a DIV\n * if necessary.\n *\n * @public\n * {@docCategory DelayedRender}\n */\nexport class DelayedRender extends React.Component<IDelayedRenderProps, IDelayedRenderState> {\n  public static defaultProps = {\n    delay: 0,\n  };\n\n  private _timeoutId: number | undefined;\n\n  constructor(props: IDelayedRenderProps) {\n    super(props);\n    this.state = {\n      isRendered: getWindow() === undefined,\n    };\n  }\n\n  public componentDidMount(): void {\n    let { delay } = this.props;\n    this._timeoutId = window.setTimeout(() => {\n      this.setState({\n        isRendered: true,\n      });\n    }, delay);\n  }\n\n  public componentWillUnmount(): void {\n    if (this._timeoutId) {\n      clearTimeout(this._timeoutId);\n    }\n  }\n\n  public render(): React.ReactElement<{}> | null {\n    return this.state.isRendered ? (React.Children.only(this.props.children) as React.ReactElement<{}>) : null;\n  }\n}\n","(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[838],{\n\n/***/ 8163:\n/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {\n\n\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/device-info\",\n      function () {\n        return __webpack_require__(4718);\n      }\n    ]);\n    if(false) {}\n  \n\n/***/ }),\n\n/***/ 4718:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4471);\n/* harmony import */ var _fluentui_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(1887);\n/* harmony import */ var _fluentui_react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(1490);\n/* harmony import */ var _fluentui_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(2985);\n/* harmony import */ var _fluentui_react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(5169);\n/* harmony import */ var _fluentui_react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(8415);\n/* harmony import */ var _yume_chan_adb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7417);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6779);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(3591);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(3370);\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(2344);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(5155);\n\n\n\n\n\n\n\n\nconst KNOWN_FEATURES = {\n    [_yume_chan_adb__WEBPACK_IMPORTED_MODULE_1__/* .AdbFeatures.ShellV2 */ .Pq.ShellV2]: '\"shell\" command now supports separating child process\\'s stdout and stderr, and returning exit code',\n    // 'cmd': '',\n    [_yume_chan_adb__WEBPACK_IMPORTED_MODULE_1__/* .AdbFeatures.StatV2 */ .Pq.StatV2]: '\"sync\" command now supports \"STA2\" (returns more information of a file than old \"STAT\") and \"LST2\" (returns information of a directory) sub command',\n    [_yume_chan_adb__WEBPACK_IMPORTED_MODULE_1__/* .AdbFeatures.ListV2 */ .Pq.ListV2]: '\"sync\" command now supports \"LST2\" sub command which returns more information when listing a directory than old \"LIST\"',\n    [_yume_chan_adb__WEBPACK_IMPORTED_MODULE_1__/* .AdbFeatures.FixedPushMkdir */ .Pq.FixedPushMkdir]: \"Android 9 (P) introduced a bug that pushing files to a non-existing directory would fail. This feature indicates it's fixed (Android 10)\",\n    // 'apex': '',\n    // 'abb': '',\n    // 'fixed_push_symlink_timestamp': '',\n    \"abb_exec\": 'Support \"exec\" command which can stream stdin into child process'\n};\nconst DeviceInfo = ()=>{\n    var ref, ref1, ref2, ref3, ref4, ref5, ref6;\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_fluentui_react__WEBPACK_IMPORTED_MODULE_7__/* .Stack */ .K, {\n        ..._utils__WEBPACK_IMPORTED_MODULE_6__/* .RouteStackProps */ .LE,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((next_head__WEBPACK_IMPORTED_MODULE_3___default()), {\n                children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"title\", {\n                    children: \"Device Info\"\n                })\n            }),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_fluentui_react__WEBPACK_IMPORTED_MODULE_8__/* .MessageBar */ .c, {}),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n                        children: \"Protocol Version: \"\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"code\", {\n                        children: (ref = _state__WEBPACK_IMPORTED_MODULE_5__/* .GlobalState.device */ .q.device) === null || ref === void 0 ? void 0 : (ref1 = ref.protocolVersion) === null || ref1 === void 0 ? void 0 : ref1.toString(16).padStart(8, \"0\")\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_fluentui_react__WEBPACK_IMPORTED_MODULE_9__/* .Separator */ .Z, {}),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_fluentui_react__WEBPACK_IMPORTED_MODULE_8__/* .MessageBar */ .c, {}),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", {\n                children: [\n                    \"Product Name: \",\n                    (ref2 = _state__WEBPACK_IMPORTED_MODULE_5__/* .GlobalState.device */ .q.device) === null || ref2 === void 0 ? void 0 : ref2.product\n                ]\n            }),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_fluentui_react__WEBPACK_IMPORTED_MODULE_9__/* .Separator */ .Z, {}),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_fluentui_react__WEBPACK_IMPORTED_MODULE_8__/* .MessageBar */ .c, {}),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", {\n                children: [\n                    \"Model Name: \",\n                    (ref3 = _state__WEBPACK_IMPORTED_MODULE_5__/* .GlobalState.device */ .q.device) === null || ref3 === void 0 ? void 0 : ref3.model\n                ]\n            }),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_fluentui_react__WEBPACK_IMPORTED_MODULE_9__/* .Separator */ .Z, {}),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_fluentui_react__WEBPACK_IMPORTED_MODULE_8__/* .MessageBar */ .c, {}),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", {\n                children: [\n                    \"Device Name: \",\n                    (ref4 = _state__WEBPACK_IMPORTED_MODULE_5__/* .GlobalState.device */ .q.device) === null || ref4 === void 0 ? void 0 : ref4.device\n                ]\n            }),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_fluentui_react__WEBPACK_IMPORTED_MODULE_9__/* .Separator */ .Z, {}),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_fluentui_react__WEBPACK_IMPORTED_MODULE_8__/* .MessageBar */ .c, {}),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n                        children: \"Features: \"\n                    }),\n                    (ref5 = _state__WEBPACK_IMPORTED_MODULE_5__/* .GlobalState.device */ .q.device) === null || ref5 === void 0 ? void 0 : (ref6 = ref5.features) === null || ref6 === void 0 ? void 0 : ref6.map((feature, index)=>/*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", {\n                            children: [\n                                index !== 0 && /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n                                    children: \", \"\n                                }),\n                                /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n                                    children: feature\n                                }),\n                                KNOWN_FEATURES[feature] && /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_fluentui_react__WEBPACK_IMPORTED_MODULE_10__/* .TooltipHost */ .G, {\n                                    content: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n                                        children: KNOWN_FEATURES[feature]\n                                    }),\n                                    children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_fluentui_react__WEBPACK_IMPORTED_MODULE_11__/* .Icon */ .J, {\n                                        style: {\n                                            marginLeft: 4\n                                        },\n                                        iconName: _utils__WEBPACK_IMPORTED_MODULE_6__/* .Icons.Info */ .PJ.Info\n                                    })\n                                })\n                            ]\n                        }, feature))\n                ]\n            })\n        ]\n    });\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__/* .observer */ .Pi)(DeviceInfo));\n\n\n/***/ }),\n\n/***/ 1490:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"c\": function() { return /* binding */ MessageBar; }\n});\n\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+utilities@8.13.4_fan5qbzahqtxlm5dzefqlqx5ia/node_modules/@fluentui/utilities/lib/styled.js + 1 modules\nvar styled = __webpack_require__(3513);\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/tslib@2.4.1/node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(3499);\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/react@18.2.0/node_modules/react/index.js\nvar react = __webpack_require__(3370);\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+utilities@8.13.4_fan5qbzahqtxlm5dzefqlqx5ia/node_modules/@fluentui/utilities/lib/classNamesFunction.js\nvar classNamesFunction = __webpack_require__(3568);\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+utilities@8.13.4_fan5qbzahqtxlm5dzefqlqx5ia/node_modules/@fluentui/utilities/lib/properties.js\nvar properties = __webpack_require__(784);\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+utilities@8.13.4_fan5qbzahqtxlm5dzefqlqx5ia/node_modules/@fluentui/utilities/lib/css.js\nvar css = __webpack_require__(6799);\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+utilities@8.13.4_fan5qbzahqtxlm5dzefqlqx5ia/node_modules/@fluentui/utilities/lib/DelayedRender.js\nvar DelayedRender = __webpack_require__(8262);\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+react@8.101.1_2zx2umvpluuhvlq44va5bta2da/node_modules/@fluentui/react/lib/components/Button/IconButton/IconButton.js + 1 modules\nvar IconButton = __webpack_require__(1197);\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+react@8.101.1_2zx2umvpluuhvlq44va5bta2da/node_modules/@fluentui/react/lib/components/Icon/Icon.js + 2 modules\nvar Icon = __webpack_require__(8415);\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+react@8.101.1_2zx2umvpluuhvlq44va5bta2da/node_modules/@fluentui/react/lib/components/MessageBar/MessageBar.types.js\nvar MessageBar_types = __webpack_require__(8290);\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+react-hooks@8.6.14_fan5qbzahqtxlm5dzefqlqx5ia/node_modules/@fluentui/react-hooks/lib/useBoolean.js\nvar useBoolean = __webpack_require__(6807);\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+react-hooks@8.6.14_fan5qbzahqtxlm5dzefqlqx5ia/node_modules/@fluentui/react-hooks/lib/useId.js\nvar useId = __webpack_require__(4976);\n;// CONCATENATED MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+react@8.101.1_2zx2umvpluuhvlq44va5bta2da/node_modules/@fluentui/react/lib/components/MessageBar/MessageBar.base.js\nvar _a;\n\n\n\n\n\n\n\nvar ICON_MAP = (_a = {},\n    _a[MessageBar_types/* MessageBarType.info */.f.info] = 'Info',\n    _a[MessageBar_types/* MessageBarType.warning */.f.warning] = 'Info',\n    _a[MessageBar_types/* MessageBarType.error */.f.error] = 'ErrorBadge',\n    _a[MessageBar_types/* MessageBarType.blocked */.f.blocked] = 'Blocked2',\n    _a[MessageBar_types/* MessageBarType.severeWarning */.f.severeWarning] = 'Warning',\n    _a[MessageBar_types/* MessageBarType.success */.f.success] = 'Completed',\n    _a);\nvar COMPONENT_NAME = 'MessageBar';\nvar getClassNames = (0,classNamesFunction/* classNamesFunction */.y)();\nvar getAnnouncementPriority = function (messageBarType) {\n    switch (messageBarType) {\n        case MessageBar_types/* MessageBarType.blocked */.f.blocked:\n        case MessageBar_types/* MessageBarType.error */.f.error:\n        case MessageBar_types/* MessageBarType.severeWarning */.f.severeWarning:\n            return 'assertive';\n    }\n    return 'polite';\n};\nvar getRole = function (messageBarType) {\n    switch (messageBarType) {\n        case MessageBar_types/* MessageBarType.blocked */.f.blocked:\n        case MessageBar_types/* MessageBarType.error */.f.error:\n        case MessageBar_types/* MessageBarType.severeWarning */.f.severeWarning:\n            return 'alert';\n    }\n    return 'status';\n};\nvar MessageBarBase = react.forwardRef(function (props, ref) {\n    var _a = (0,useBoolean/* useBoolean */.k)(false), expandSingleLine = _a[0], toggleExpandSingleLine = _a[1].toggle;\n    var labelId = (0,useId/* useId */.M)('MessageBar');\n    var actions = props.actions, className = props.className, children = props.children, \n    // eslint-disable-next-line deprecation/deprecation\n    overflowButtonAriaLabel = props.overflowButtonAriaLabel, dismissIconProps = props.dismissIconProps, styles = props.styles, theme = props.theme, _b = props.messageBarType, messageBarType = _b === void 0 ? MessageBar_types/* MessageBarType.info */.f.info : _b, _c = props.onDismiss, onDismiss = _c === void 0 ? undefined : _c, _d = props.isMultiline, isMultiline = _d === void 0 ? true : _d, truncated = props.truncated, dismissButtonAriaLabel = props.dismissButtonAriaLabel, messageBarIconProps = props.messageBarIconProps, role = props.role, _e = props.delayedRender, delayedRender = _e === void 0 ? true : _e, expandButtonProps = props.expandButtonProps;\n    var nativeProps = (0,properties/* getNativeProps */.pq)(props, properties/* htmlElementProperties */.iY, [\n        'className',\n        'role',\n    ]);\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        messageBarType: messageBarType || MessageBar_types/* MessageBarType.info */.f.info,\n        onDismiss: onDismiss !== undefined,\n        actions: actions !== undefined,\n        truncated: truncated,\n        isMultiline: isMultiline,\n        expandSingleLine: expandSingleLine,\n        className: className,\n    });\n    var expandIconProps = { iconName: expandSingleLine ? 'DoubleChevronUp' : 'DoubleChevronDown' };\n    var regionProps = actions || onDismiss ? { 'aria-describedby': labelId, role: 'region' } : {};\n    var actionsDiv = actions ? react.createElement(\"div\", { className: classNames.actions }, actions) : null;\n    var dismissButton = onDismiss ? (react.createElement(IconButton/* IconButton */.h, { disabled: false, className: classNames.dismissal, onClick: onDismiss, iconProps: dismissIconProps ? dismissIconProps : { iconName: 'Clear' }, title: dismissButtonAriaLabel, ariaLabel: dismissButtonAriaLabel })) : null;\n    return (react.createElement(\"div\", (0,tslib_es6/* __assign */.pi)({ ref: ref, className: classNames.root }, regionProps),\n        react.createElement(\"div\", { className: classNames.content },\n            react.createElement(\"div\", { className: classNames.iconContainer, \"aria-hidden\": true }, messageBarIconProps ? (react.createElement(Icon/* Icon */.J, (0,tslib_es6/* __assign */.pi)({}, messageBarIconProps, { className: (0,css/* css */.i)(classNames.icon, messageBarIconProps.className) }))) : (react.createElement(Icon/* Icon */.J, { iconName: ICON_MAP[messageBarType], className: classNames.icon }))),\n            react.createElement(\"div\", { className: classNames.text, id: labelId, role: role || getRole(messageBarType), \"aria-live\": getAnnouncementPriority(messageBarType) },\n                react.createElement(\"span\", (0,tslib_es6/* __assign */.pi)({ className: classNames.innerText }, nativeProps), delayedRender ? (react.createElement(DelayedRender/* DelayedRender */.U, null,\n                    react.createElement(\"span\", null, children))) : (\n                // this span is probably not necessary, but preserving it for now in case anyone\n                // has styling that expects it to be present\n                react.createElement(\"span\", null, children)))),\n            /* singleline expand/collapse button */ !isMultiline && !actionsDiv && truncated && (react.createElement(\"div\", { className: classNames.expandSingleLine },\n                react.createElement(IconButton/* IconButton */.h, (0,tslib_es6/* __assign */.pi)({ disabled: false, className: classNames.expand, onClick: toggleExpandSingleLine, iconProps: expandIconProps, ariaLabel: overflowButtonAriaLabel, \"aria-expanded\": expandSingleLine }, expandButtonProps)))),\n            !isMultiline && actionsDiv,\n            /* singleline dismiss */ !isMultiline && dismissButton && (react.createElement(\"div\", { className: classNames.dismissSingleLine }, dismissButton)),\n            isMultiline && dismissButton),\n        isMultiline && actionsDiv));\n});\nMessageBarBase.displayName = COMPONENT_NAME;\n\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+style-utilities@8.8.3_fan5qbzahqtxlm5dzefqlqx5ia/node_modules/@fluentui/style-utilities/lib/index.js + 21 modules\nvar lib = __webpack_require__(3349);\n;// CONCATENATED MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+react@8.101.1_2zx2umvpluuhvlq44va5bta2da/node_modules/@fluentui/react/lib/components/MessageBar/MessageBar.styles.js\nvar MessageBar_styles_a, _b, _c;\n\n\n\nvar GlobalClassNames = {\n    root: 'ms-MessageBar',\n    error: 'ms-MessageBar--error',\n    blocked: 'ms-MessageBar--blocked',\n    severeWarning: 'ms-MessageBar--severeWarning',\n    success: 'ms-MessageBar--success',\n    warning: 'ms-MessageBar--warning',\n    multiline: 'ms-MessageBar-multiline',\n    singleline: 'ms-MessageBar-singleline',\n    dismissalSingleLine: 'ms-MessageBar-dismissalSingleLine',\n    expandingSingleLine: 'ms-MessageBar-expandingSingleLine',\n    content: 'ms-MessageBar-content',\n    iconContainer: 'ms-MessageBar-icon',\n    text: 'ms-MessageBar-text',\n    innerText: 'ms-MessageBar-innerText',\n    dismissSingleLine: 'ms-MessageBar-dismissSingleLine',\n    expandSingleLine: 'ms-MessageBar-expandSingleLine',\n    dismissal: 'ms-MessageBar-dismissal',\n    expand: 'ms-MessageBar-expand',\n    actions: 'ms-MessageBar-actions',\n    actionsSingleline: 'ms-MessageBar-actionsSingleLine',\n};\nvar backgroundColor = (MessageBar_styles_a = {},\n    MessageBar_styles_a[MessageBar_types/* MessageBarType.error */.f.error] = 'errorBackground',\n    MessageBar_styles_a[MessageBar_types/* MessageBarType.blocked */.f.blocked] = 'errorBackground',\n    MessageBar_styles_a[MessageBar_types/* MessageBarType.success */.f.success] = 'successBackground',\n    MessageBar_styles_a[MessageBar_types/* MessageBarType.warning */.f.warning] = 'warningBackground',\n    MessageBar_styles_a[MessageBar_types/* MessageBarType.severeWarning */.f.severeWarning] = 'severeWarningBackground',\n    MessageBar_styles_a[MessageBar_types/* MessageBarType.info */.f.info] = 'infoBackground',\n    MessageBar_styles_a);\nvar highContrastBackgroundColor = (_b = {},\n    _b[MessageBar_types/* MessageBarType.error */.f.error] = 'rgba(255, 0, 0, 0.3)',\n    _b[MessageBar_types/* MessageBarType.blocked */.f.blocked] = 'rgba(255, 0, 0, 0.3)',\n    _b[MessageBar_types/* MessageBarType.success */.f.success] = 'rgba(48, 241, 73, 0.3)',\n    _b[MessageBar_types/* MessageBarType.warning */.f.warning] = 'rgba(255, 254, 57, 0.3)',\n    _b[MessageBar_types/* MessageBarType.severeWarning */.f.severeWarning] = 'rgba(255, 0, 0, 0.3)',\n    _b[MessageBar_types/* MessageBarType.info */.f.info] = 'Window',\n    _b);\nvar iconColor = (_c = {},\n    _c[MessageBar_types/* MessageBarType.error */.f.error] = 'errorIcon',\n    _c[MessageBar_types/* MessageBarType.blocked */.f.blocked] = 'errorIcon',\n    _c[MessageBar_types/* MessageBarType.success */.f.success] = 'successIcon',\n    _c[MessageBar_types/* MessageBarType.warning */.f.warning] = 'warningIcon',\n    _c[MessageBar_types/* MessageBarType.severeWarning */.f.severeWarning] = 'severeWarningIcon',\n    _c[MessageBar_types/* MessageBarType.info */.f.info] = 'infoIcon',\n    _c);\nvar getStyles = function (props) {\n    var _a, _b, _c, _d, _e;\n    var theme = props.theme, className = props.className, onDismiss = props.onDismiss, truncated = props.truncated, isMultiline = props.isMultiline, expandSingleLine = props.expandSingleLine, _f = props.messageBarType, messageBarType = _f === void 0 ? MessageBar_types/* MessageBarType.info */.f.info : _f;\n    var semanticColors = theme.semanticColors, fonts = theme.fonts;\n    var SmallScreenSelector = (0,lib/* getScreenSelector */.sK)(0, lib/* ScreenWidthMaxSmall */.mV);\n    var classNames = (0,lib/* getGlobalClassNames */.Cn)(GlobalClassNames, theme);\n    var dismissalAndExpandIconStyle = {\n        fontSize: lib/* IconFontSizes.xSmall */.ld.xSmall,\n        height: 10,\n        lineHeight: '10px',\n        color: semanticColors.messageText,\n        selectors: (_a = {},\n            _a[lib/* HighContrastSelector */.qJ] = (0,tslib_es6/* __assign */.pi)((0,tslib_es6/* __assign */.pi)({}, (0,lib/* getHighContrastNoAdjustStyle */.xM)()), { color: 'WindowText' }),\n            _a),\n    };\n    var dismissalAndExpandStyle = [\n        (0,lib/* getFocusStyle */.GL)(theme, {\n            inset: 1,\n            highContrastStyle: {\n                outlineOffset: '-6px',\n                outline: '1px solid Highlight',\n            },\n            borderColor: 'transparent',\n        }),\n        {\n            flexShrink: 0,\n            width: 32,\n            height: 32,\n            padding: '8px 12px',\n            selectors: {\n                '& .ms-Button-icon': dismissalAndExpandIconStyle,\n                ':hover': {\n                    backgroundColor: 'transparent',\n                },\n                ':active': {\n                    backgroundColor: 'transparent',\n                },\n            },\n        },\n    ];\n    return {\n        root: [\n            classNames.root,\n            fonts.medium,\n            messageBarType === MessageBar_types/* MessageBarType.error */.f.error && classNames.error,\n            messageBarType === MessageBar_types/* MessageBarType.blocked */.f.blocked && classNames.blocked,\n            messageBarType === MessageBar_types/* MessageBarType.severeWarning */.f.severeWarning && classNames.severeWarning,\n            messageBarType === MessageBar_types/* MessageBarType.success */.f.success && classNames.success,\n            messageBarType === MessageBar_types/* MessageBarType.warning */.f.warning && classNames.warning,\n            isMultiline ? classNames.multiline : classNames.singleline,\n            !isMultiline && onDismiss && classNames.dismissalSingleLine,\n            !isMultiline && truncated && classNames.expandingSingleLine,\n            {\n                background: semanticColors[backgroundColor[messageBarType]],\n                color: semanticColors.messageText,\n                minHeight: 32,\n                width: '100%',\n                display: 'flex',\n                wordBreak: 'break-word',\n                selectors: (_b = {\n                        '.ms-Link': {\n                            color: semanticColors.messageLink,\n                            selectors: {\n                                ':hover': {\n                                    color: semanticColors.messageLinkHovered,\n                                },\n                            },\n                        }\n                    },\n                    _b[lib/* HighContrastSelector */.qJ] = (0,tslib_es6/* __assign */.pi)((0,tslib_es6/* __assign */.pi)({}, (0,lib/* getHighContrastNoAdjustStyle */.xM)()), { background: highContrastBackgroundColor[messageBarType], border: '1px solid WindowText', color: 'WindowText' }),\n                    _b),\n            },\n            isMultiline && {\n                flexDirection: 'column',\n            },\n            className,\n        ],\n        content: [\n            classNames.content,\n            {\n                display: 'flex',\n                width: '100%',\n                lineHeight: 'normal',\n            },\n        ],\n        iconContainer: [\n            classNames.iconContainer,\n            {\n                fontSize: lib/* IconFontSizes.medium */.ld.medium,\n                minWidth: 16,\n                minHeight: 16,\n                display: 'flex',\n                flexShrink: 0,\n                margin: '8px 0 8px 12px',\n            },\n        ],\n        icon: {\n            color: semanticColors[iconColor[messageBarType]],\n            selectors: (_c = {},\n                _c[lib/* HighContrastSelector */.qJ] = (0,tslib_es6/* __assign */.pi)((0,tslib_es6/* __assign */.pi)({}, (0,lib/* getHighContrastNoAdjustStyle */.xM)()), { color: 'WindowText' }),\n                _c),\n        },\n        text: [\n            classNames.text,\n            (0,tslib_es6/* __assign */.pi)((0,tslib_es6/* __assign */.pi)({ minWidth: 0, display: 'flex', flexGrow: 1, margin: 8 }, fonts.small), { selectors: (_d = {},\n                    _d[lib/* HighContrastSelector */.qJ] = (0,tslib_es6/* __assign */.pi)({}, (0,lib/* getHighContrastNoAdjustStyle */.xM)()),\n                    _d) }),\n            !onDismiss && {\n                marginRight: 12,\n            },\n        ],\n        innerText: [\n            classNames.innerText,\n            {\n                lineHeight: 16,\n                selectors: {\n                    '& span a:last-child': {\n                        paddingLeft: 4,\n                    },\n                },\n            },\n            truncated && {\n                overflow: 'visible',\n                whiteSpace: 'pre-wrap',\n            },\n            !isMultiline && {\n                // In high contrast this causes the top and bottom of links' focus outline to be clipped\n                // (not sure of a good way around that while still maintaining text clipping)\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n            },\n            !isMultiline &&\n                !truncated && {\n                selectors: (_e = {},\n                    _e[SmallScreenSelector] = {\n                        overflow: 'visible',\n                        whiteSpace: 'pre-wrap',\n                    },\n                    _e),\n            },\n            expandSingleLine && {\n                overflow: 'visible',\n                whiteSpace: 'pre-wrap',\n            },\n        ],\n        dismissSingleLine: classNames.dismissSingleLine,\n        expandSingleLine: classNames.expandSingleLine,\n        dismissal: [classNames.dismissal, dismissalAndExpandStyle],\n        expand: [classNames.expand, dismissalAndExpandStyle],\n        actions: [\n            isMultiline ? classNames.actions : classNames.actionsSingleline,\n            {\n                display: 'flex',\n                flexGrow: 0,\n                flexShrink: 0,\n                flexBasis: 'auto',\n                flexDirection: 'row-reverse',\n                alignItems: 'center',\n                margin: '0 12px 0 8px',\n                // reset forced colors to browser control for inner actions\n                forcedColorAdjust: 'auto',\n                MsHighContrastAdjust: 'auto',\n                selectors: {\n                    '& button:nth-child(n+2)': {\n                        marginLeft: 8,\n                    },\n                },\n            },\n            isMultiline && {\n                marginBottom: 8,\n            },\n            onDismiss &&\n                !isMultiline && {\n                marginRight: 0,\n            },\n        ],\n    };\n};\n\n;// CONCATENATED MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+react@8.101.1_2zx2umvpluuhvlq44va5bta2da/node_modules/@fluentui/react/lib/components/MessageBar/MessageBar.js\n\n\n\nvar MessageBar = (0,styled/* styled */.z)(MessageBarBase, getStyles, undefined, {\n    scope: 'MessageBar',\n});\n\n\n/***/ }),\n\n/***/ 8290:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"f\": function() { return /* binding */ MessageBarType; }\n/* harmony export */ });\n/**\n * {@docCategory MessageBar}\n */\nvar MessageBarType;\n(function (MessageBarType) {\n    /** Info styled MessageBar */\n    MessageBarType[MessageBarType[\"info\"] = 0] = \"info\";\n    /** Error styled MessageBar */\n    MessageBarType[MessageBarType[\"error\"] = 1] = \"error\";\n    /** Blocked styled MessageBar */\n    MessageBarType[MessageBarType[\"blocked\"] = 2] = \"blocked\";\n    /** SevereWarning styled MessageBar */\n    MessageBarType[MessageBarType[\"severeWarning\"] = 3] = \"severeWarning\";\n    /** Success styled MessageBar */\n    MessageBarType[MessageBarType[\"success\"] = 4] = \"success\";\n    /** Warning styled MessageBar */\n    MessageBarType[MessageBarType[\"warning\"] = 5] = \"warning\";\n})(MessageBarType || (MessageBarType = {}));\n\n\n/***/ }),\n\n/***/ 8262:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"U\": function() { return /* binding */ DelayedRender; }\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3499);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3370);\n/* harmony import */ var _dom_getWindow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6451);\n\n\n\n/**\n * Utility component for delaying the render of a child component after a given delay. This component\n * requires a single child component; don't pass in many components. Wrap multiple components in a DIV\n * if necessary.\n *\n * @public\n * {@docCategory DelayedRender}\n */\nvar DelayedRender = /** @class */ (function (_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_1__/* .__extends */ .ZT)(DelayedRender, _super);\n    function DelayedRender(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            isRendered: (0,_dom_getWindow__WEBPACK_IMPORTED_MODULE_2__/* .getWindow */ .J)() === undefined,\n        };\n        return _this;\n    }\n    DelayedRender.prototype.componentDidMount = function () {\n        var _this = this;\n        var delay = this.props.delay;\n        this._timeoutId = window.setTimeout(function () {\n            _this.setState({\n                isRendered: true,\n            });\n        }, delay);\n    };\n    DelayedRender.prototype.componentWillUnmount = function () {\n        if (this._timeoutId) {\n            clearTimeout(this._timeoutId);\n        }\n    };\n    DelayedRender.prototype.render = function () {\n        return this.state.isRendered ? react__WEBPACK_IMPORTED_MODULE_0__.Children.only(this.props.children) : null;\n    };\n    DelayedRender.defaultProps = {\n        delay: 0,\n    };\n    return DelayedRender;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component));\n\n\n\n/***/ })\n\n},\n/******/ function(__webpack_require__) { // webpackRuntimeModules\n/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }\n/******/ __webpack_require__.O(0, [774,888,179], function() { return __webpack_exec__(8163); });\n/******/ var __webpack_exports__ = __webpack_require__.O();\n/******/ _N_E = __webpack_exports__;\n/******/ }\n]);"],"names":["self","push","__unused_webpack_module","__unused_webpack_exports","__webpack_require__","window","__NEXT_P","__webpack_exports__","r","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","_fluentui_react__WEBPACK_IMPORTED_MODULE_7__","_fluentui_react__WEBPACK_IMPORTED_MODULE_8__","_fluentui_react__WEBPACK_IMPORTED_MODULE_9__","_fluentui_react__WEBPACK_IMPORTED_MODULE_10__","_fluentui_react__WEBPACK_IMPORTED_MODULE_11__","_yume_chan_adb__WEBPACK_IMPORTED_MODULE_1__","mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__","next_head__WEBPACK_IMPORTED_MODULE_3__","next_head__WEBPACK_IMPORTED_MODULE_3___default","n","_state__WEBPACK_IMPORTED_MODULE_5__","_utils__WEBPACK_IMPORTED_MODULE_6__","KNOWN_FEATURES","Pq","ShellV2","StatV2","ListV2","FixedPushMkdir","DeviceInfo","ref","ref1","ref2","ref3","ref4","ref5","ref6","jsxs","K","LE","children","jsx","c","q","device","protocolVersion","toString","padStart","Z","product","model","features","map","feature","index","G","content","J","style","marginLeft","iconName","PJ","Info","Pi","d","MessageBar","_a","MessageBar_styles_a","_b","_c","styled","tslib_es6","react","classNamesFunction","properties","css","DelayedRender","IconButton","Icon","MessageBar_types","useBoolean","useId","ICON_MAP","f","info","warning","error","blocked","severeWarning","success","getClassNames","y","getAnnouncementPriority","messageBarType","getRole","MessageBarBase","forwardRef","props","k","expandSingleLine","toggleExpandSingleLine","toggle","labelId","M","actions","className","overflowButtonAriaLabel","dismissIconProps","styles","theme","onDismiss","undefined","_d","isMultiline","truncated","dismissButtonAriaLabel","messageBarIconProps","role","_e","delayedRender","expandButtonProps","nativeProps","pq","iY","classNames","actionsDiv","createElement","dismissButton","h","disabled","dismissal","onClick","iconProps","title","ariaLabel","pi","root","iconContainer","i","icon","text","id","innerText","U","expand","dismissSingleLine","displayName","lib","GlobalClassNames","multiline","singleline","dismissalSingleLine","expandingSingleLine","actionsSingleline","backgroundColor","highContrastBackgroundColor","iconColor","z","_f","semanticColors","fonts","SmallScreenSelector","sK","mV","Cn","dismissalAndExpandIconStyle","fontSize","ld","xSmall","height","lineHeight","color","messageText","selectors","qJ","xM","dismissalAndExpandStyle","GL","inset","highContrastStyle","outlineOffset","outline","borderColor","flexShrink","width","padding","medium","background","minHeight","display","wordBreak","messageLink","messageLinkHovered","border","flexDirection","minWidth","margin","flexGrow","small","marginRight","paddingLeft","overflow","whiteSpace","textOverflow","flexBasis","alignItems","forcedColorAdjust","MsHighContrastAdjust","marginBottom","scope","MessageBarType","tslib__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_0__","_dom_getWindow__WEBPACK_IMPORTED_MODULE_2__","_super","_this","call","state","isRendered","ZT","prototype","componentDidMount","delay","_timeoutId","setTimeout","setState","componentWillUnmount","clearTimeout","render","Children","only","defaultProps","Component","O","s","_N_E"],"sourceRoot":""}