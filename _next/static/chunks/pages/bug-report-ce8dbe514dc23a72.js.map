{"version":3,"file":"static/chunks/pages/bug-report-ce8dbe514dc23a72.js","mappings":"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","sources":["webpack://_N_E/?72ab","webpack://_N_E/./src/pages/bug-report.tsx","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.101.1_2zx2umvpluuhvlq44va5bta2da/node_modules/@fluentui/react/lib/components/src/components/MessageBar/MessageBar.base.tsx","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.101.1_2zx2umvpluuhvlq44va5bta2da/node_modules/@fluentui/react/lib/components/src/components/MessageBar/MessageBar.styles.ts","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.101.1_2zx2umvpluuhvlq44va5bta2da/node_modules/@fluentui/react/lib/components/src/components/MessageBar/MessageBar.tsx","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.101.1_2zx2umvpluuhvlq44va5bta2da/node_modules/@fluentui/react/lib/components/src/components/MessageBar/MessageBar.types.ts","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+utilities@8.13.4_fan5qbzahqtxlm5dzefqlqx5ia/node_modules/@fluentui/utilities/src/DelayedRender.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/bug-report\",\n      function () {\n        return require(\"private-next-pages/bug-report.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/bug-report\"])\n      });\n    }\n  ","// cspell: ignore bugreport\n// cspell: ignore bugreportz\n\nimport { MessageBar, MessageBarType, PrimaryButton, Stack, StackItem } from \"@fluentui/react\";\nimport { BugReport, BugReportZ, BugReportZVersion } from \"@yume-chan/android-bin\";\nimport { action, autorun, makeAutoObservable, observable, runInAction } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { NextPage } from \"next\";\nimport Head from \"next/head\";\nimport { GlobalState } from \"../state\";\nimport { RouteStackProps, saveFile } from \"../utils\";\n\nclass BugReportState {\n    bugReport: BugReport | undefined = undefined;\n\n    bugReportZ: BugReportZ | undefined = undefined;\n\n    bugReportZVersion: BugReportZVersion | undefined = undefined;\n\n    bugReportZInProgress = false;\n\n    bugReportZProgress: string | undefined = undefined;\n\n    bugReportZTotalSize: string | undefined = undefined;\n\n    constructor() {\n        makeAutoObservable(this, {\n            bugReportZVersion: observable.deep,\n            generateBugReport: action.bound,\n            generateBugReportZStream: action.bound,\n            generateBugReportZ: action.bound,\n        });\n\n        autorun(() => {\n            if (GlobalState.device) {\n                runInAction(() => {\n                    this.bugReport = new BugReport(GlobalState.device!);\n                    this.bugReportZ = new BugReportZ(GlobalState.device!);\n\n                    this.bugReportZ.version().then(action(version => {\n                        this.bugReportZVersion = version;\n                    }));\n                });\n            } else {\n                runInAction(() => {\n                    this.bugReport = undefined;\n                    this.bugReportZ = undefined;\n                    this.bugReportZVersion = undefined;\n                });\n            }\n        });\n    }\n\n    async generateBugReport() {\n        await this.bugReport!.generate()\n            .pipeTo(saveFile('bugreport.txt'));\n    }\n\n    async generateBugReportZStream() {\n        await this.bugReportZ!.stream()\n            .pipeTo(saveFile('bugreport.zip'));\n    }\n\n    async generateBugReportZ() {\n        runInAction(() => {\n            this.bugReportZInProgress = true;\n        });\n\n        const filename = await this.bugReportZ!.generate(\n            this.bugReportZVersion!.supportProgress\n                ? action((progress, total) => {\n                    this.bugReportZProgress = progress;\n                    this.bugReportZTotalSize = total;\n                })\n                : undefined\n        );\n\n        const sync = await GlobalState.device!.sync();\n        await sync.read(filename)\n            .pipeTo(saveFile('bugreport.zip'));\n\n        sync.dispose();\n\n        runInAction(() => {\n            this.bugReportZInProgress = false;\n            this.bugReportZProgress = undefined;\n            this.bugReportZTotalSize = undefined;\n        });\n    }\n}\n\nconst state = new BugReportState();\n\nconst BugReportPage: NextPage = () => {\n    return (\n        <Stack {...RouteStackProps}>\n            <Head>\n                <title>BugReport - Android Web Toolbox</title>\n            </Head>\n\n            <MessageBar messageBarType={MessageBarType.info}>This is the `bugreport`/`bugreportz` tool in Android</MessageBar>\n\n            <StackItem>\n                <PrimaryButton\n                    disabled={!state.bugReport}\n                    text=\"Generate BugReport\"\n                    onClick={state.generateBugReport}\n                />\n            </StackItem>\n\n            <StackItem>\n                <PrimaryButton\n                    disabled={!state.bugReportZVersion?.supportStream}\n                    text=\"Generate Zipped BugReport (Streaming)\"\n                    onClick={state.generateBugReportZStream}\n                />\n            </StackItem>\n\n            <StackItem>\n                <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 8 }}>\n                    <StackItem>\n                        <PrimaryButton\n                            disabled={!state.bugReportZVersion || state.bugReportZInProgress}\n                            text=\"Generate Zipped BugReport\"\n                            onClick={state.generateBugReportZ}\n                        />\n                    </StackItem>\n\n                    {state.bugReportZInProgress && (\n                        <StackItem>\n                            {state.bugReportZTotalSize ? (\n                                <span>\n                                    Progress: {state.bugReportZProgress} / {state.bugReportZTotalSize}\n                                </span>\n                            ) : (\n                                <span>\n                                    Generating... Please wait\n                                    {!state.bugReportZVersion!.supportProgress && ' (this device does not support progress)'}\n                                </span>\n                            )}\n                        </StackItem>\n                    )}\n                </Stack>\n            </StackItem>\n        </Stack>\n    );\n};\n\nexport default observer(BugReportPage);\n","import * as React from 'react';\nimport { DelayedRender, classNamesFunction, getNativeProps, htmlElementProperties, css } from '../../Utilities';\nimport { IconButton } from '../../Button';\nimport { Icon } from '../../Icon';\nimport { MessageBarType } from './MessageBar.types';\nimport { useId, useBoolean } from '@fluentui/react-hooks';\nimport type { IMessageBarProps, IMessageBarStyleProps, IMessageBarStyles } from './MessageBar.types';\n\nconst ICON_MAP = {\n  [MessageBarType.info]: 'Info',\n  [MessageBarType.warning]: 'Info',\n  [MessageBarType.error]: 'ErrorBadge',\n  [MessageBarType.blocked]: 'Blocked2',\n  [MessageBarType.severeWarning]: 'Warning',\n  [MessageBarType.success]: 'Completed',\n};\n\nconst COMPONENT_NAME = 'MessageBar';\n\nconst getClassNames = classNamesFunction<IMessageBarStyleProps, IMessageBarStyles>();\n\nconst getAnnouncementPriority = (messageBarType: MessageBarType): 'assertive' | 'polite' => {\n  switch (messageBarType) {\n    case MessageBarType.blocked:\n    case MessageBarType.error:\n    case MessageBarType.severeWarning:\n      return 'assertive';\n  }\n  return 'polite';\n};\n\nconst getRole = (messageBarType: MessageBarType): 'alert' | 'status' => {\n  switch (messageBarType) {\n    case MessageBarType.blocked:\n    case MessageBarType.error:\n    case MessageBarType.severeWarning:\n      return 'alert';\n  }\n  return 'status';\n};\n\nexport const MessageBarBase: React.FunctionComponent<IMessageBarProps> = React.forwardRef<\n  HTMLDivElement,\n  IMessageBarProps\n>((props, ref) => {\n  const [expandSingleLine, { toggle: toggleExpandSingleLine }] = useBoolean(false);\n  const labelId = useId('MessageBar');\n\n  const {\n    actions,\n    className,\n    children,\n    // eslint-disable-next-line deprecation/deprecation\n    overflowButtonAriaLabel,\n    dismissIconProps,\n    styles,\n    theme,\n    messageBarType = MessageBarType.info,\n    onDismiss = undefined,\n    isMultiline = true,\n    truncated,\n    dismissButtonAriaLabel,\n    messageBarIconProps,\n    role,\n    delayedRender = true,\n    expandButtonProps,\n  } = props;\n\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLSpanElement>>(props, htmlElementProperties, [\n    'className',\n    'role',\n  ]);\n\n  const classNames: { [key in keyof IMessageBarStyles]: string } = getClassNames(styles, {\n    theme: theme!,\n    messageBarType: messageBarType || MessageBarType.info,\n    onDismiss: onDismiss !== undefined,\n    actions: actions !== undefined,\n    truncated: truncated,\n    isMultiline: isMultiline,\n    expandSingleLine: expandSingleLine,\n    className,\n  });\n\n  const expandIconProps = { iconName: expandSingleLine ? 'DoubleChevronUp' : 'DoubleChevronDown' };\n  const regionProps = actions || onDismiss ? { 'aria-describedby': labelId, role: 'region' } : {};\n  const actionsDiv = actions ? <div className={classNames.actions}>{actions}</div> : null;\n\n  const dismissButton = onDismiss ? (\n    <IconButton\n      disabled={false}\n      className={classNames.dismissal}\n      onClick={onDismiss}\n      iconProps={dismissIconProps ? dismissIconProps : { iconName: 'Clear' }}\n      title={dismissButtonAriaLabel}\n      ariaLabel={dismissButtonAriaLabel}\n    />\n  ) : null;\n\n  return (\n    <div ref={ref} className={classNames.root} {...regionProps}>\n      <div className={classNames.content}>\n        <div className={classNames.iconContainer} aria-hidden>\n          {messageBarIconProps ? (\n            <Icon {...messageBarIconProps} className={css(classNames.icon, messageBarIconProps.className)} />\n          ) : (\n            <Icon iconName={ICON_MAP[messageBarType!]} className={classNames.icon} />\n          )}\n        </div>\n        <div\n          className={classNames.text}\n          id={labelId}\n          role={role || getRole(messageBarType)}\n          aria-live={getAnnouncementPriority(messageBarType)}\n        >\n          <span className={classNames.innerText} {...nativeProps}>\n            {delayedRender ? (\n              <DelayedRender>\n                <span>{children}</span>\n              </DelayedRender>\n            ) : (\n              // this span is probably not necessary, but preserving it for now in case anyone\n              // has styling that expects it to be present\n              <span>{children}</span>\n            )}\n          </span>\n        </div>\n        {\n          /* singleline expand/collapse button */ !isMultiline && !actionsDiv && truncated && (\n            <div className={classNames.expandSingleLine}>\n              <IconButton\n                disabled={false}\n                className={classNames.expand}\n                onClick={toggleExpandSingleLine}\n                iconProps={expandIconProps}\n                ariaLabel={overflowButtonAriaLabel}\n                aria-expanded={expandSingleLine}\n                {...expandButtonProps}\n              />\n            </div>\n          )\n        }\n        {/* singleline actions */ !isMultiline && actionsDiv}\n        {\n          /* singleline dismiss */ !isMultiline && dismissButton && (\n            <div className={classNames.dismissSingleLine}>{dismissButton}</div>\n          )\n        }\n        {/* multiline dismiss */ isMultiline && dismissButton}\n      </div>\n      {/* multiline actions */ isMultiline && actionsDiv}\n    </div>\n  );\n});\nMessageBarBase.displayName = COMPONENT_NAME;\n","import {\n  HighContrastSelector,\n  ScreenWidthMaxSmall,\n  getScreenSelector,\n  getGlobalClassNames,\n  getFocusStyle,\n  IconFontSizes,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport { MessageBarType } from './MessageBar.types';\nimport type { IStyle, ISemanticColors } from '../../Styling';\nimport type { IMessageBarStyleProps, IMessageBarStyles } from './MessageBar.types';\n\nconst GlobalClassNames = {\n  root: 'ms-MessageBar',\n  error: 'ms-MessageBar--error',\n  blocked: 'ms-MessageBar--blocked',\n  severeWarning: 'ms-MessageBar--severeWarning',\n  success: 'ms-MessageBar--success',\n  warning: 'ms-MessageBar--warning',\n  multiline: 'ms-MessageBar-multiline',\n  singleline: 'ms-MessageBar-singleline',\n  dismissalSingleLine: 'ms-MessageBar-dismissalSingleLine',\n  expandingSingleLine: 'ms-MessageBar-expandingSingleLine',\n  content: 'ms-MessageBar-content',\n  iconContainer: 'ms-MessageBar-icon',\n  text: 'ms-MessageBar-text',\n  innerText: 'ms-MessageBar-innerText',\n  dismissSingleLine: 'ms-MessageBar-dismissSingleLine',\n  expandSingleLine: 'ms-MessageBar-expandSingleLine',\n  dismissal: 'ms-MessageBar-dismissal',\n  expand: 'ms-MessageBar-expand',\n  actions: 'ms-MessageBar-actions',\n  actionsSingleline: 'ms-MessageBar-actionsSingleLine',\n};\n\nconst backgroundColor: { [key: string]: keyof ISemanticColors } = {\n  [MessageBarType.error]: 'errorBackground',\n  [MessageBarType.blocked]: 'errorBackground',\n  [MessageBarType.success]: 'successBackground',\n  [MessageBarType.warning]: 'warningBackground',\n  [MessageBarType.severeWarning]: 'severeWarningBackground',\n  [MessageBarType.info]: 'infoBackground',\n};\n\nconst highContrastBackgroundColor: { [key: string]: string } = {\n  [MessageBarType.error]: 'rgba(255, 0, 0, 0.3)',\n  [MessageBarType.blocked]: 'rgba(255, 0, 0, 0.3)',\n  [MessageBarType.success]: 'rgba(48, 241, 73, 0.3)',\n  [MessageBarType.warning]: 'rgba(255, 254, 57, 0.3)',\n  [MessageBarType.severeWarning]: 'rgba(255, 0, 0, 0.3)',\n  [MessageBarType.info]: 'Window',\n};\n\nconst iconColor: { [key: string]: keyof ISemanticColors } = {\n  [MessageBarType.error]: 'errorIcon',\n  [MessageBarType.blocked]: 'errorIcon',\n  [MessageBarType.success]: 'successIcon',\n  [MessageBarType.warning]: 'warningIcon',\n  [MessageBarType.severeWarning]: 'severeWarningIcon',\n  [MessageBarType.info]: 'infoIcon',\n};\n\nexport const getStyles = (props: IMessageBarStyleProps): IMessageBarStyles => {\n  const {\n    theme,\n    className,\n    onDismiss,\n    truncated,\n    isMultiline,\n    expandSingleLine,\n    messageBarType = MessageBarType.info,\n  } = props;\n  const { semanticColors, fonts } = theme;\n\n  const SmallScreenSelector = getScreenSelector(0, ScreenWidthMaxSmall);\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const dismissalAndExpandIconStyle: IStyle = {\n    fontSize: IconFontSizes.xSmall,\n    height: 10,\n    lineHeight: '10px',\n    color: semanticColors.messageText,\n    selectors: {\n      [HighContrastSelector]: {\n        ...getHighContrastNoAdjustStyle(),\n        color: 'WindowText',\n      },\n    },\n  };\n\n  const dismissalAndExpandStyle: IStyle = [\n    getFocusStyle(theme, {\n      inset: 1,\n      highContrastStyle: {\n        outlineOffset: '-6px',\n        outline: '1px solid Highlight',\n      },\n      borderColor: 'transparent',\n    }),\n    {\n      flexShrink: 0,\n      width: 32,\n      height: 32,\n      padding: '8px 12px',\n      selectors: {\n        '& .ms-Button-icon': dismissalAndExpandIconStyle,\n        ':hover': {\n          backgroundColor: 'transparent',\n        },\n        ':active': {\n          backgroundColor: 'transparent',\n        },\n      },\n    },\n  ];\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      messageBarType === MessageBarType.error && classNames.error,\n      messageBarType === MessageBarType.blocked && classNames.blocked,\n      messageBarType === MessageBarType.severeWarning && classNames.severeWarning,\n      messageBarType === MessageBarType.success && classNames.success,\n      messageBarType === MessageBarType.warning && classNames.warning,\n      isMultiline ? classNames.multiline : classNames.singleline,\n      !isMultiline && onDismiss && classNames.dismissalSingleLine,\n      !isMultiline && truncated && classNames.expandingSingleLine,\n      {\n        background: semanticColors[backgroundColor[messageBarType]],\n        color: semanticColors.messageText,\n        minHeight: 32,\n        width: '100%',\n        display: 'flex',\n        wordBreak: 'break-word',\n        selectors: {\n          '.ms-Link': {\n            color: semanticColors.messageLink,\n            selectors: {\n              ':hover': {\n                color: semanticColors.messageLinkHovered,\n              },\n            },\n          },\n          [HighContrastSelector]: {\n            ...getHighContrastNoAdjustStyle(),\n            background: highContrastBackgroundColor[messageBarType],\n            border: '1px solid WindowText',\n            color: 'WindowText',\n          },\n        },\n      },\n      isMultiline && {\n        flexDirection: 'column',\n      },\n      className,\n    ],\n    content: [\n      classNames.content,\n      {\n        display: 'flex',\n        width: '100%',\n        lineHeight: 'normal',\n      },\n    ],\n    iconContainer: [\n      classNames.iconContainer,\n      {\n        fontSize: IconFontSizes.medium,\n        minWidth: 16,\n        minHeight: 16,\n        display: 'flex',\n        flexShrink: 0,\n        margin: '8px 0 8px 12px',\n      },\n    ],\n    icon: {\n      color: semanticColors[iconColor[messageBarType]],\n      selectors: {\n        [HighContrastSelector]: {\n          ...getHighContrastNoAdjustStyle(),\n          color: 'WindowText',\n        },\n      },\n    },\n    text: [\n      classNames.text,\n      {\n        minWidth: 0,\n        display: 'flex',\n        flexGrow: 1,\n        margin: 8,\n        ...fonts.small,\n        selectors: {\n          [HighContrastSelector]: {\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n      !onDismiss && {\n        marginRight: 12,\n      },\n    ],\n    innerText: [\n      classNames.innerText,\n      {\n        lineHeight: 16,\n        selectors: {\n          '& span a:last-child': {\n            paddingLeft: 4,\n          },\n        },\n      },\n      truncated && {\n        overflow: 'visible',\n        whiteSpace: 'pre-wrap',\n      },\n      !isMultiline && {\n        // In high contrast this causes the top and bottom of links' focus outline to be clipped\n        // (not sure of a good way around that while still maintaining text clipping)\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n      },\n      !isMultiline &&\n        !truncated && {\n          selectors: {\n            [SmallScreenSelector]: {\n              overflow: 'visible',\n              whiteSpace: 'pre-wrap',\n            },\n          },\n        },\n      expandSingleLine && {\n        overflow: 'visible',\n        whiteSpace: 'pre-wrap',\n      },\n    ],\n    dismissSingleLine: classNames.dismissSingleLine,\n    expandSingleLine: classNames.expandSingleLine,\n    dismissal: [classNames.dismissal, dismissalAndExpandStyle],\n    expand: [classNames.expand, dismissalAndExpandStyle],\n    actions: [\n      isMultiline ? classNames.actions : classNames.actionsSingleline,\n      {\n        display: 'flex',\n        flexGrow: 0,\n        flexShrink: 0,\n        flexBasis: 'auto',\n        flexDirection: 'row-reverse',\n        alignItems: 'center',\n        margin: '0 12px 0 8px',\n        // reset forced colors to browser control for inner actions\n        forcedColorAdjust: 'auto',\n        MsHighContrastAdjust: 'auto',\n        selectors: {\n          '& button:nth-child(n+2)': {\n            marginLeft: 8,\n          },\n        },\n      },\n      isMultiline && {\n        marginBottom: 8,\n      },\n      onDismiss &&\n        !isMultiline && {\n          marginRight: 0,\n        },\n    ],\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { MessageBarBase } from './MessageBar.base';\nimport { getStyles } from './MessageBar.styles';\nimport type { IMessageBarProps, IMessageBarStyleProps, IMessageBarStyles } from './MessageBar.types';\n\nexport const MessageBar: React.FunctionComponent<IMessageBarProps> = styled<\n  IMessageBarProps,\n  IMessageBarStyleProps,\n  IMessageBarStyles\n>(MessageBarBase, getStyles, undefined, {\n  scope: 'MessageBar',\n});\n","import * as React from 'react';\nimport { BaseButton, Button, IButtonProps } from '../../Button';\nimport type { ITheme, IStyle } from '../../Styling';\nimport type { IRefObject, IStyleFunctionOrObject } from '../../Utilities';\nimport type { IIconProps } from '../../Icon';\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBar {}\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBarProps extends React.HTMLAttributes<HTMLElement>, React.RefAttributes<HTMLDivElement> {\n  /**\n   * Optional callback to access the IMessageBar interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<IMessageBar>;\n\n  /**\n   * The type of MessageBar to render.\n   * @defaultvalue MessageBarType.info\n   */\n  messageBarType?: MessageBarType;\n\n  /**\n   * The actions you want to show on the other side.\n   */\n  actions?: JSX.Element;\n\n  /**\n   * A description of the message bar for the benefit of screen readers.\n   * @deprecated Use native prop `aria-label` instead.\n   */\n  ariaLabel?: string;\n\n  /**\n   * Whether the message bar has a dismiss button and its callback.\n   * If null, we don't show a dismiss button.\n   * @defaultvalue null\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  onDismiss?: (ev?: React.MouseEvent<HTMLElement | BaseButton | Button>) => any;\n\n  /**\n   * Determines if the message bar is multi lined.\n   * If false, and the text overflows over buttons or to another line, it is clipped.\n   * @defaultvalue true\n   */\n  isMultiline?: boolean;\n\n  /**\n   * Aria label on dismiss button if onDismiss is defined.\n   */\n  dismissButtonAriaLabel?: string;\n\n  /**\n   * Determines if the message bar text is truncated.\n   * If true, a button will render to toggle between a single line view and multiline view.\n   * This prop is for single line message bars with no buttons only in a limited space scenario.\n   * @defaultvalue false\n   */\n  truncated?: boolean;\n\n  /**\n   * Aria label on overflow button if truncated is defined.\n   * @deprecated Use `expandButtonProps` instead.\n   */\n  overflowButtonAriaLabel?: string;\n\n  /**\n   * Additional CSS class(es) to apply to the MessageBar.\n   */\n  className?: string;\n\n  /**\n   * Theme (provided through customization.)\n   */\n  theme?: ITheme;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<IMessageBarStyleProps, IMessageBarStyles>;\n\n  /**\n   * Custom icon prop to replace the dismiss icon.\n   * If unset, default will be the Fabric Clear icon.\n   */\n  dismissIconProps?: IIconProps;\n\n  /**\n   * Custom icon prop to replace the message bar icon.\n   * If unset, default will be the icon set by messageBarType.\n   */\n  messageBarIconProps?: IIconProps;\n\n  /**\n   *  Button props that can be applied to the expand button of the MessageBar.\n   */\n  expandButtonProps?: IButtonProps;\n\n  /**\n   * Custom role to apply to the MessageBar.\n   * @defaultvalue `alert` if `messageBarType` is `error`, `blocked`, or `severeWarning`;\n   * or `status` otherwise\n   */\n  role?: 'alert' | 'status' | 'none';\n\n  /**\n   * By default, MessageBar delay-renders its content within an internal live region to help ensure\n   * it's announced by screen readers. You can disable that behavior by setting this prop to `false`.\n   *\n   * If you set this prop to `false`, to ensure proper announcement you should either:\n   * - If appropriate, ensure that the `role` prop is set to `alert` (this will be done by default\n   *   if `messageBarType` is `error`, `blocked`, or `severeWarning`), OR\n   * - Set the `role` prop to `none` (to avoid nested `status` regions), wrap the whole MessageBar\n   *   in a `<div role=\"status\">` which is always rendered, and ensure that the MessageBar is\n   *   rendered either conditionally or with a delay.\n   * @default true\n   */\n  delayedRender?: boolean;\n}\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBarStyleProps {\n  /**\n   * Theme (provided through customization).\n   */\n  theme: ITheme;\n\n  /**\n   * Additional CSS class(es).\n   */\n  className?: string;\n\n  /**\n   * Type of the MessageBar.\n   */\n  messageBarType?: MessageBarType;\n\n  /**\n   * Whether the MessageBar contains a dismiss button.\n   */\n  onDismiss?: boolean;\n\n  /**\n   * Whether the text is truncated.\n   */\n  truncated?: boolean;\n\n  /**\n   * Whether the MessageBar is rendered in multi line (as opposed to single line) mode.\n   */\n  isMultiline?: boolean;\n\n  /**\n   * Whether the single line MessageBar is being expanded.\n   */\n  expandSingleLine?: boolean;\n\n  /**\n   * Whether the MessageBar contains any action elements.\n   */\n  actions?: boolean;\n}\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBarStyles {\n  /**\n   * Style set for the root element.\n   */\n  root?: IStyle;\n\n  /**\n   * Style set for the element containing the icon, text, and optional dismiss button.\n   */\n  content?: IStyle;\n\n  /**\n   * Style set for the element containing the icon.\n   */\n  iconContainer?: IStyle;\n\n  /**\n   * Style set for the icon.\n   */\n  icon?: IStyle;\n\n  /**\n   * Style set for the element containing the text.\n   */\n  text?: IStyle;\n\n  /**\n   * Style set for the text.\n   */\n  innerText?: IStyle;\n\n  /**\n   * Style set for the optional dismiss button.\n   */\n  dismissal?: IStyle;\n\n  /**\n   * Style set for the icon used to expand and collapse the MessageBar.\n   */\n  expand?: IStyle;\n\n  /**\n   * Style set for the element containing the dismiss button.\n   */\n  dismissSingleLine?: IStyle;\n\n  /**\n   * Style set for the element containing the expand icon.\n   */\n  expandSingleLine?: IStyle;\n\n  /**\n   * Style set for the optional element containing the action elements.\n   */\n  actions?: IStyle;\n}\n\n/**\n * {@docCategory MessageBar}\n */\nexport enum MessageBarType {\n  /** Info styled MessageBar */\n  info = 0,\n  /** Error styled MessageBar */\n  error = 1,\n  /** Blocked styled MessageBar */\n  blocked = 2,\n  /** SevereWarning styled MessageBar */\n  severeWarning = 3,\n  /** Success styled MessageBar */\n  success = 4,\n  /** Warning styled MessageBar */\n  warning = 5,\n}\n","import * as React from 'react';\nimport { getWindow } from './dom/getWindow';\n\n/**\n * DelayedRender component props.\n *\n * @public\n */\n// eslint-disable-next-line deprecation/deprecation\nexport interface IDelayedRenderProps extends React.Props<{}> {\n  /**\n   * Number of milliseconds to delay rendering children.\n   */\n  delay?: number;\n}\n\n/**\n * DelayedRender component state.\n *\n * @internal\n */\nexport interface IDelayedRenderState {\n  /**\n   * Whether the component is rendered or not.\n   */\n  isRendered: boolean;\n}\n\n/**\n * Utility component for delaying the render of a child component after a given delay. This component\n * requires a single child component; don't pass in many components. Wrap multiple components in a DIV\n * if necessary.\n *\n * @public\n * {@docCategory DelayedRender}\n */\nexport class DelayedRender extends React.Component<IDelayedRenderProps, IDelayedRenderState> {\n  public static defaultProps = {\n    delay: 0,\n  };\n\n  private _timeoutId: number | undefined;\n\n  constructor(props: IDelayedRenderProps) {\n    super(props);\n    this.state = {\n      isRendered: getWindow() === undefined,\n    };\n  }\n\n  public componentDidMount(): void {\n    let { delay } = this.props;\n    this._timeoutId = window.setTimeout(() => {\n      this.setState({\n        isRendered: true,\n      });\n    }, delay);\n  }\n\n  public componentWillUnmount(): void {\n    if (this._timeoutId) {\n      clearTimeout(this._timeoutId);\n    }\n  }\n\n  public render(): React.ReactElement<{}> | null {\n    return this.state.isRendered ? (React.Children.only(this.props.children) as React.ReactElement<{}>) : null;\n  }\n}\n","(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[673],{\n\n/***/ 8663:\n/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {\n\n\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/bug-report\",\n      function () {\n        return __webpack_require__(1221);\n      }\n    ]);\n    if(false) {}\n  \n\n/***/ }),\n\n/***/ 1221:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4471);\n/* harmony import */ var _fluentui_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(1887);\n/* harmony import */ var _fluentui_react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(1490);\n/* harmony import */ var _fluentui_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(8290);\n/* harmony import */ var _fluentui_react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(9899);\n/* harmony import */ var _fluentui_react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(7891);\n/* harmony import */ var _yume_chan_android_bin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7386);\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(6323);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6779);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(3591);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2344);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(5155);\n// cspell: ignore bugreport\n// cspell: ignore bugreportz\n\n\n\n\n\n\n\n\nclass BugReportState {\n    async generateBugReport() {\n        await this.bugReport.generate().pipeTo((0,_utils__WEBPACK_IMPORTED_MODULE_5__/* .saveFile */ .yH)(\"bugreport.txt\"));\n    }\n    async generateBugReportZStream() {\n        await this.bugReportZ.stream().pipeTo((0,_utils__WEBPACK_IMPORTED_MODULE_5__/* .saveFile */ .yH)(\"bugreport.zip\"));\n    }\n    async generateBugReportZ() {\n        (0,mobx__WEBPACK_IMPORTED_MODULE_6__/* .runInAction */ .z)(()=>{\n            this.bugReportZInProgress = true;\n        });\n        const filename = await this.bugReportZ.generate(this.bugReportZVersion.supportProgress ? (0,mobx__WEBPACK_IMPORTED_MODULE_6__/* .action */ .aD)((progress, total)=>{\n            this.bugReportZProgress = progress;\n            this.bugReportZTotalSize = total;\n        }) : undefined);\n        const sync = await _state__WEBPACK_IMPORTED_MODULE_4__/* .GlobalState.device.sync */ .q.device.sync();\n        await sync.read(filename).pipeTo((0,_utils__WEBPACK_IMPORTED_MODULE_5__/* .saveFile */ .yH)(\"bugreport.zip\"));\n        sync.dispose();\n        (0,mobx__WEBPACK_IMPORTED_MODULE_6__/* .runInAction */ .z)(()=>{\n            this.bugReportZInProgress = false;\n            this.bugReportZProgress = undefined;\n            this.bugReportZTotalSize = undefined;\n        });\n    }\n    constructor(){\n        this.bugReport = undefined;\n        this.bugReportZ = undefined;\n        this.bugReportZVersion = undefined;\n        this.bugReportZInProgress = false;\n        this.bugReportZProgress = undefined;\n        this.bugReportZTotalSize = undefined;\n        (0,mobx__WEBPACK_IMPORTED_MODULE_6__/* .makeAutoObservable */ .ky)(this, {\n            bugReportZVersion: mobx__WEBPACK_IMPORTED_MODULE_6__/* .observable.deep */ .LO.deep,\n            generateBugReport: mobx__WEBPACK_IMPORTED_MODULE_6__/* .action.bound */ .aD.bound,\n            generateBugReportZStream: mobx__WEBPACK_IMPORTED_MODULE_6__/* .action.bound */ .aD.bound,\n            generateBugReportZ: mobx__WEBPACK_IMPORTED_MODULE_6__/* .action.bound */ .aD.bound\n        });\n        (0,mobx__WEBPACK_IMPORTED_MODULE_6__/* .autorun */ .EH)(()=>{\n            if (_state__WEBPACK_IMPORTED_MODULE_4__/* .GlobalState.device */ .q.device) {\n                (0,mobx__WEBPACK_IMPORTED_MODULE_6__/* .runInAction */ .z)(()=>{\n                    this.bugReport = new _yume_chan_android_bin__WEBPACK_IMPORTED_MODULE_1__/* .BugReport */ .gI(_state__WEBPACK_IMPORTED_MODULE_4__/* .GlobalState.device */ .q.device);\n                    this.bugReportZ = new _yume_chan_android_bin__WEBPACK_IMPORTED_MODULE_1__/* .BugReportZ */ .Qw(_state__WEBPACK_IMPORTED_MODULE_4__/* .GlobalState.device */ .q.device);\n                    this.bugReportZ.version().then((0,mobx__WEBPACK_IMPORTED_MODULE_6__/* .action */ .aD)((version)=>{\n                        this.bugReportZVersion = version;\n                    }));\n                });\n            } else {\n                (0,mobx__WEBPACK_IMPORTED_MODULE_6__/* .runInAction */ .z)(()=>{\n                    this.bugReport = undefined;\n                    this.bugReportZ = undefined;\n                    this.bugReportZVersion = undefined;\n                });\n            }\n        });\n    }\n}\nconst state = new BugReportState();\nconst BugReportPage = ()=>{\n    var ref;\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_fluentui_react__WEBPACK_IMPORTED_MODULE_7__/* .Stack */ .K, {\n        ..._utils__WEBPACK_IMPORTED_MODULE_5__/* .RouteStackProps */ .LE,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((next_head__WEBPACK_IMPORTED_MODULE_3___default()), {\n                children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"title\", {\n                    children: \"BugReport - Android Web Toolbox\"\n                })\n            }),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_fluentui_react__WEBPACK_IMPORTED_MODULE_8__/* .MessageBar */ .c, {\n                messageBarType: _fluentui_react__WEBPACK_IMPORTED_MODULE_9__/* .MessageBarType.info */ .f.info,\n                children: \"This is the `bugreport`/`bugreportz` tool in Android\"\n            }),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_fluentui_react__WEBPACK_IMPORTED_MODULE_10__/* .StackItem */ .v, {\n                children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_fluentui_react__WEBPACK_IMPORTED_MODULE_11__/* .PrimaryButton */ .K, {\n                    disabled: !state.bugReport,\n                    text: \"Generate BugReport\",\n                    onClick: state.generateBugReport\n                })\n            }),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_fluentui_react__WEBPACK_IMPORTED_MODULE_10__/* .StackItem */ .v, {\n                children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_fluentui_react__WEBPACK_IMPORTED_MODULE_11__/* .PrimaryButton */ .K, {\n                    disabled: !((ref = state.bugReportZVersion) === null || ref === void 0 ? void 0 : ref.supportStream),\n                    text: \"Generate Zipped BugReport (Streaming)\",\n                    onClick: state.generateBugReportZStream\n                })\n            }),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_fluentui_react__WEBPACK_IMPORTED_MODULE_10__/* .StackItem */ .v, {\n                children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_fluentui_react__WEBPACK_IMPORTED_MODULE_7__/* .Stack */ .K, {\n                    horizontal: true,\n                    verticalAlign: \"center\",\n                    tokens: {\n                        childrenGap: 8\n                    },\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_fluentui_react__WEBPACK_IMPORTED_MODULE_10__/* .StackItem */ .v, {\n                            children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_fluentui_react__WEBPACK_IMPORTED_MODULE_11__/* .PrimaryButton */ .K, {\n                                disabled: !state.bugReportZVersion || state.bugReportZInProgress,\n                                text: \"Generate Zipped BugReport\",\n                                onClick: state.generateBugReportZ\n                            })\n                        }),\n                        state.bugReportZInProgress && /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_fluentui_react__WEBPACK_IMPORTED_MODULE_10__/* .StackItem */ .v, {\n                            children: state.bugReportZTotalSize ? /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", {\n                                children: [\n                                    \"Progress: \",\n                                    state.bugReportZProgress,\n                                    \" / \",\n                                    state.bugReportZTotalSize\n                                ]\n                            }) : /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", {\n                                children: [\n                                    \"Generating... Please wait\",\n                                    !state.bugReportZVersion.supportProgress && \" (this device does not support progress)\"\n                                ]\n                            })\n                        })\n                    ]\n                })\n            })\n        ]\n    });\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__/* .observer */ .Pi)(BugReportPage));\n\n\n/***/ }),\n\n/***/ 1490:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"c\": function() { return /* binding */ MessageBar; }\n});\n\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+utilities@8.13.4_fan5qbzahqtxlm5dzefqlqx5ia/node_modules/@fluentui/utilities/lib/styled.js + 1 modules\nvar styled = __webpack_require__(3513);\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/tslib@2.4.1/node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(3499);\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/react@18.2.0/node_modules/react/index.js\nvar react = __webpack_require__(3370);\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+utilities@8.13.4_fan5qbzahqtxlm5dzefqlqx5ia/node_modules/@fluentui/utilities/lib/classNamesFunction.js\nvar classNamesFunction = __webpack_require__(3568);\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+utilities@8.13.4_fan5qbzahqtxlm5dzefqlqx5ia/node_modules/@fluentui/utilities/lib/properties.js\nvar properties = __webpack_require__(784);\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+utilities@8.13.4_fan5qbzahqtxlm5dzefqlqx5ia/node_modules/@fluentui/utilities/lib/css.js\nvar css = __webpack_require__(6799);\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+utilities@8.13.4_fan5qbzahqtxlm5dzefqlqx5ia/node_modules/@fluentui/utilities/lib/DelayedRender.js\nvar DelayedRender = __webpack_require__(8262);\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+react@8.101.1_2zx2umvpluuhvlq44va5bta2da/node_modules/@fluentui/react/lib/components/Button/IconButton/IconButton.js + 1 modules\nvar IconButton = __webpack_require__(1197);\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+react@8.101.1_2zx2umvpluuhvlq44va5bta2da/node_modules/@fluentui/react/lib/components/Icon/Icon.js + 2 modules\nvar Icon = __webpack_require__(8415);\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+react@8.101.1_2zx2umvpluuhvlq44va5bta2da/node_modules/@fluentui/react/lib/components/MessageBar/MessageBar.types.js\nvar MessageBar_types = __webpack_require__(8290);\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+react-hooks@8.6.14_fan5qbzahqtxlm5dzefqlqx5ia/node_modules/@fluentui/react-hooks/lib/useBoolean.js\nvar useBoolean = __webpack_require__(6807);\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+react-hooks@8.6.14_fan5qbzahqtxlm5dzefqlqx5ia/node_modules/@fluentui/react-hooks/lib/useId.js\nvar useId = __webpack_require__(4976);\n;// CONCATENATED MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+react@8.101.1_2zx2umvpluuhvlq44va5bta2da/node_modules/@fluentui/react/lib/components/MessageBar/MessageBar.base.js\nvar _a;\n\n\n\n\n\n\n\nvar ICON_MAP = (_a = {},\n    _a[MessageBar_types/* MessageBarType.info */.f.info] = 'Info',\n    _a[MessageBar_types/* MessageBarType.warning */.f.warning] = 'Info',\n    _a[MessageBar_types/* MessageBarType.error */.f.error] = 'ErrorBadge',\n    _a[MessageBar_types/* MessageBarType.blocked */.f.blocked] = 'Blocked2',\n    _a[MessageBar_types/* MessageBarType.severeWarning */.f.severeWarning] = 'Warning',\n    _a[MessageBar_types/* MessageBarType.success */.f.success] = 'Completed',\n    _a);\nvar COMPONENT_NAME = 'MessageBar';\nvar getClassNames = (0,classNamesFunction/* classNamesFunction */.y)();\nvar getAnnouncementPriority = function (messageBarType) {\n    switch (messageBarType) {\n        case MessageBar_types/* MessageBarType.blocked */.f.blocked:\n        case MessageBar_types/* MessageBarType.error */.f.error:\n        case MessageBar_types/* MessageBarType.severeWarning */.f.severeWarning:\n            return 'assertive';\n    }\n    return 'polite';\n};\nvar getRole = function (messageBarType) {\n    switch (messageBarType) {\n        case MessageBar_types/* MessageBarType.blocked */.f.blocked:\n        case MessageBar_types/* MessageBarType.error */.f.error:\n        case MessageBar_types/* MessageBarType.severeWarning */.f.severeWarning:\n            return 'alert';\n    }\n    return 'status';\n};\nvar MessageBarBase = react.forwardRef(function (props, ref) {\n    var _a = (0,useBoolean/* useBoolean */.k)(false), expandSingleLine = _a[0], toggleExpandSingleLine = _a[1].toggle;\n    var labelId = (0,useId/* useId */.M)('MessageBar');\n    var actions = props.actions, className = props.className, children = props.children, \n    // eslint-disable-next-line deprecation/deprecation\n    overflowButtonAriaLabel = props.overflowButtonAriaLabel, dismissIconProps = props.dismissIconProps, styles = props.styles, theme = props.theme, _b = props.messageBarType, messageBarType = _b === void 0 ? MessageBar_types/* MessageBarType.info */.f.info : _b, _c = props.onDismiss, onDismiss = _c === void 0 ? undefined : _c, _d = props.isMultiline, isMultiline = _d === void 0 ? true : _d, truncated = props.truncated, dismissButtonAriaLabel = props.dismissButtonAriaLabel, messageBarIconProps = props.messageBarIconProps, role = props.role, _e = props.delayedRender, delayedRender = _e === void 0 ? true : _e, expandButtonProps = props.expandButtonProps;\n    var nativeProps = (0,properties/* getNativeProps */.pq)(props, properties/* htmlElementProperties */.iY, [\n        'className',\n        'role',\n    ]);\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        messageBarType: messageBarType || MessageBar_types/* MessageBarType.info */.f.info,\n        onDismiss: onDismiss !== undefined,\n        actions: actions !== undefined,\n        truncated: truncated,\n        isMultiline: isMultiline,\n        expandSingleLine: expandSingleLine,\n        className: className,\n    });\n    var expandIconProps = { iconName: expandSingleLine ? 'DoubleChevronUp' : 'DoubleChevronDown' };\n    var regionProps = actions || onDismiss ? { 'aria-describedby': labelId, role: 'region' } : {};\n    var actionsDiv = actions ? react.createElement(\"div\", { className: classNames.actions }, actions) : null;\n    var dismissButton = onDismiss ? (react.createElement(IconButton/* IconButton */.h, { disabled: false, className: classNames.dismissal, onClick: onDismiss, iconProps: dismissIconProps ? dismissIconProps : { iconName: 'Clear' }, title: dismissButtonAriaLabel, ariaLabel: dismissButtonAriaLabel })) : null;\n    return (react.createElement(\"div\", (0,tslib_es6/* __assign */.pi)({ ref: ref, className: classNames.root }, regionProps),\n        react.createElement(\"div\", { className: classNames.content },\n            react.createElement(\"div\", { className: classNames.iconContainer, \"aria-hidden\": true }, messageBarIconProps ? (react.createElement(Icon/* Icon */.J, (0,tslib_es6/* __assign */.pi)({}, messageBarIconProps, { className: (0,css/* css */.i)(classNames.icon, messageBarIconProps.className) }))) : (react.createElement(Icon/* Icon */.J, { iconName: ICON_MAP[messageBarType], className: classNames.icon }))),\n            react.createElement(\"div\", { className: classNames.text, id: labelId, role: role || getRole(messageBarType), \"aria-live\": getAnnouncementPriority(messageBarType) },\n                react.createElement(\"span\", (0,tslib_es6/* __assign */.pi)({ className: classNames.innerText }, nativeProps), delayedRender ? (react.createElement(DelayedRender/* DelayedRender */.U, null,\n                    react.createElement(\"span\", null, children))) : (\n                // this span is probably not necessary, but preserving it for now in case anyone\n                // has styling that expects it to be present\n                react.createElement(\"span\", null, children)))),\n            /* singleline expand/collapse button */ !isMultiline && !actionsDiv && truncated && (react.createElement(\"div\", { className: classNames.expandSingleLine },\n                react.createElement(IconButton/* IconButton */.h, (0,tslib_es6/* __assign */.pi)({ disabled: false, className: classNames.expand, onClick: toggleExpandSingleLine, iconProps: expandIconProps, ariaLabel: overflowButtonAriaLabel, \"aria-expanded\": expandSingleLine }, expandButtonProps)))),\n            !isMultiline && actionsDiv,\n            /* singleline dismiss */ !isMultiline && dismissButton && (react.createElement(\"div\", { className: classNames.dismissSingleLine }, dismissButton)),\n            isMultiline && dismissButton),\n        isMultiline && actionsDiv));\n});\nMessageBarBase.displayName = COMPONENT_NAME;\n\n// EXTERNAL MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+style-utilities@8.8.3_fan5qbzahqtxlm5dzefqlqx5ia/node_modules/@fluentui/style-utilities/lib/index.js + 21 modules\nvar lib = __webpack_require__(3349);\n;// CONCATENATED MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+react@8.101.1_2zx2umvpluuhvlq44va5bta2da/node_modules/@fluentui/react/lib/components/MessageBar/MessageBar.styles.js\nvar MessageBar_styles_a, _b, _c;\n\n\n\nvar GlobalClassNames = {\n    root: 'ms-MessageBar',\n    error: 'ms-MessageBar--error',\n    blocked: 'ms-MessageBar--blocked',\n    severeWarning: 'ms-MessageBar--severeWarning',\n    success: 'ms-MessageBar--success',\n    warning: 'ms-MessageBar--warning',\n    multiline: 'ms-MessageBar-multiline',\n    singleline: 'ms-MessageBar-singleline',\n    dismissalSingleLine: 'ms-MessageBar-dismissalSingleLine',\n    expandingSingleLine: 'ms-MessageBar-expandingSingleLine',\n    content: 'ms-MessageBar-content',\n    iconContainer: 'ms-MessageBar-icon',\n    text: 'ms-MessageBar-text',\n    innerText: 'ms-MessageBar-innerText',\n    dismissSingleLine: 'ms-MessageBar-dismissSingleLine',\n    expandSingleLine: 'ms-MessageBar-expandSingleLine',\n    dismissal: 'ms-MessageBar-dismissal',\n    expand: 'ms-MessageBar-expand',\n    actions: 'ms-MessageBar-actions',\n    actionsSingleline: 'ms-MessageBar-actionsSingleLine',\n};\nvar backgroundColor = (MessageBar_styles_a = {},\n    MessageBar_styles_a[MessageBar_types/* MessageBarType.error */.f.error] = 'errorBackground',\n    MessageBar_styles_a[MessageBar_types/* MessageBarType.blocked */.f.blocked] = 'errorBackground',\n    MessageBar_styles_a[MessageBar_types/* MessageBarType.success */.f.success] = 'successBackground',\n    MessageBar_styles_a[MessageBar_types/* MessageBarType.warning */.f.warning] = 'warningBackground',\n    MessageBar_styles_a[MessageBar_types/* MessageBarType.severeWarning */.f.severeWarning] = 'severeWarningBackground',\n    MessageBar_styles_a[MessageBar_types/* MessageBarType.info */.f.info] = 'infoBackground',\n    MessageBar_styles_a);\nvar highContrastBackgroundColor = (_b = {},\n    _b[MessageBar_types/* MessageBarType.error */.f.error] = 'rgba(255, 0, 0, 0.3)',\n    _b[MessageBar_types/* MessageBarType.blocked */.f.blocked] = 'rgba(255, 0, 0, 0.3)',\n    _b[MessageBar_types/* MessageBarType.success */.f.success] = 'rgba(48, 241, 73, 0.3)',\n    _b[MessageBar_types/* MessageBarType.warning */.f.warning] = 'rgba(255, 254, 57, 0.3)',\n    _b[MessageBar_types/* MessageBarType.severeWarning */.f.severeWarning] = 'rgba(255, 0, 0, 0.3)',\n    _b[MessageBar_types/* MessageBarType.info */.f.info] = 'Window',\n    _b);\nvar iconColor = (_c = {},\n    _c[MessageBar_types/* MessageBarType.error */.f.error] = 'errorIcon',\n    _c[MessageBar_types/* MessageBarType.blocked */.f.blocked] = 'errorIcon',\n    _c[MessageBar_types/* MessageBarType.success */.f.success] = 'successIcon',\n    _c[MessageBar_types/* MessageBarType.warning */.f.warning] = 'warningIcon',\n    _c[MessageBar_types/* MessageBarType.severeWarning */.f.severeWarning] = 'severeWarningIcon',\n    _c[MessageBar_types/* MessageBarType.info */.f.info] = 'infoIcon',\n    _c);\nvar getStyles = function (props) {\n    var _a, _b, _c, _d, _e;\n    var theme = props.theme, className = props.className, onDismiss = props.onDismiss, truncated = props.truncated, isMultiline = props.isMultiline, expandSingleLine = props.expandSingleLine, _f = props.messageBarType, messageBarType = _f === void 0 ? MessageBar_types/* MessageBarType.info */.f.info : _f;\n    var semanticColors = theme.semanticColors, fonts = theme.fonts;\n    var SmallScreenSelector = (0,lib/* getScreenSelector */.sK)(0, lib/* ScreenWidthMaxSmall */.mV);\n    var classNames = (0,lib/* getGlobalClassNames */.Cn)(GlobalClassNames, theme);\n    var dismissalAndExpandIconStyle = {\n        fontSize: lib/* IconFontSizes.xSmall */.ld.xSmall,\n        height: 10,\n        lineHeight: '10px',\n        color: semanticColors.messageText,\n        selectors: (_a = {},\n            _a[lib/* HighContrastSelector */.qJ] = (0,tslib_es6/* __assign */.pi)((0,tslib_es6/* __assign */.pi)({}, (0,lib/* getHighContrastNoAdjustStyle */.xM)()), { color: 'WindowText' }),\n            _a),\n    };\n    var dismissalAndExpandStyle = [\n        (0,lib/* getFocusStyle */.GL)(theme, {\n            inset: 1,\n            highContrastStyle: {\n                outlineOffset: '-6px',\n                outline: '1px solid Highlight',\n            },\n            borderColor: 'transparent',\n        }),\n        {\n            flexShrink: 0,\n            width: 32,\n            height: 32,\n            padding: '8px 12px',\n            selectors: {\n                '& .ms-Button-icon': dismissalAndExpandIconStyle,\n                ':hover': {\n                    backgroundColor: 'transparent',\n                },\n                ':active': {\n                    backgroundColor: 'transparent',\n                },\n            },\n        },\n    ];\n    return {\n        root: [\n            classNames.root,\n            fonts.medium,\n            messageBarType === MessageBar_types/* MessageBarType.error */.f.error && classNames.error,\n            messageBarType === MessageBar_types/* MessageBarType.blocked */.f.blocked && classNames.blocked,\n            messageBarType === MessageBar_types/* MessageBarType.severeWarning */.f.severeWarning && classNames.severeWarning,\n            messageBarType === MessageBar_types/* MessageBarType.success */.f.success && classNames.success,\n            messageBarType === MessageBar_types/* MessageBarType.warning */.f.warning && classNames.warning,\n            isMultiline ? classNames.multiline : classNames.singleline,\n            !isMultiline && onDismiss && classNames.dismissalSingleLine,\n            !isMultiline && truncated && classNames.expandingSingleLine,\n            {\n                background: semanticColors[backgroundColor[messageBarType]],\n                color: semanticColors.messageText,\n                minHeight: 32,\n                width: '100%',\n                display: 'flex',\n                wordBreak: 'break-word',\n                selectors: (_b = {\n                        '.ms-Link': {\n                            color: semanticColors.messageLink,\n                            selectors: {\n                                ':hover': {\n                                    color: semanticColors.messageLinkHovered,\n                                },\n                            },\n                        }\n                    },\n                    _b[lib/* HighContrastSelector */.qJ] = (0,tslib_es6/* __assign */.pi)((0,tslib_es6/* __assign */.pi)({}, (0,lib/* getHighContrastNoAdjustStyle */.xM)()), { background: highContrastBackgroundColor[messageBarType], border: '1px solid WindowText', color: 'WindowText' }),\n                    _b),\n            },\n            isMultiline && {\n                flexDirection: 'column',\n            },\n            className,\n        ],\n        content: [\n            classNames.content,\n            {\n                display: 'flex',\n                width: '100%',\n                lineHeight: 'normal',\n            },\n        ],\n        iconContainer: [\n            classNames.iconContainer,\n            {\n                fontSize: lib/* IconFontSizes.medium */.ld.medium,\n                minWidth: 16,\n                minHeight: 16,\n                display: 'flex',\n                flexShrink: 0,\n                margin: '8px 0 8px 12px',\n            },\n        ],\n        icon: {\n            color: semanticColors[iconColor[messageBarType]],\n            selectors: (_c = {},\n                _c[lib/* HighContrastSelector */.qJ] = (0,tslib_es6/* __assign */.pi)((0,tslib_es6/* __assign */.pi)({}, (0,lib/* getHighContrastNoAdjustStyle */.xM)()), { color: 'WindowText' }),\n                _c),\n        },\n        text: [\n            classNames.text,\n            (0,tslib_es6/* __assign */.pi)((0,tslib_es6/* __assign */.pi)({ minWidth: 0, display: 'flex', flexGrow: 1, margin: 8 }, fonts.small), { selectors: (_d = {},\n                    _d[lib/* HighContrastSelector */.qJ] = (0,tslib_es6/* __assign */.pi)({}, (0,lib/* getHighContrastNoAdjustStyle */.xM)()),\n                    _d) }),\n            !onDismiss && {\n                marginRight: 12,\n            },\n        ],\n        innerText: [\n            classNames.innerText,\n            {\n                lineHeight: 16,\n                selectors: {\n                    '& span a:last-child': {\n                        paddingLeft: 4,\n                    },\n                },\n            },\n            truncated && {\n                overflow: 'visible',\n                whiteSpace: 'pre-wrap',\n            },\n            !isMultiline && {\n                // In high contrast this causes the top and bottom of links' focus outline to be clipped\n                // (not sure of a good way around that while still maintaining text clipping)\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n            },\n            !isMultiline &&\n                !truncated && {\n                selectors: (_e = {},\n                    _e[SmallScreenSelector] = {\n                        overflow: 'visible',\n                        whiteSpace: 'pre-wrap',\n                    },\n                    _e),\n            },\n            expandSingleLine && {\n                overflow: 'visible',\n                whiteSpace: 'pre-wrap',\n            },\n        ],\n        dismissSingleLine: classNames.dismissSingleLine,\n        expandSingleLine: classNames.expandSingleLine,\n        dismissal: [classNames.dismissal, dismissalAndExpandStyle],\n        expand: [classNames.expand, dismissalAndExpandStyle],\n        actions: [\n            isMultiline ? classNames.actions : classNames.actionsSingleline,\n            {\n                display: 'flex',\n                flexGrow: 0,\n                flexShrink: 0,\n                flexBasis: 'auto',\n                flexDirection: 'row-reverse',\n                alignItems: 'center',\n                margin: '0 12px 0 8px',\n                // reset forced colors to browser control for inner actions\n                forcedColorAdjust: 'auto',\n                MsHighContrastAdjust: 'auto',\n                selectors: {\n                    '& button:nth-child(n+2)': {\n                        marginLeft: 8,\n                    },\n                },\n            },\n            isMultiline && {\n                marginBottom: 8,\n            },\n            onDismiss &&\n                !isMultiline && {\n                marginRight: 0,\n            },\n        ],\n    };\n};\n\n;// CONCATENATED MODULE: ../../common/temp/node_modules/.pnpm/@fluentui+react@8.101.1_2zx2umvpluuhvlq44va5bta2da/node_modules/@fluentui/react/lib/components/MessageBar/MessageBar.js\n\n\n\nvar MessageBar = (0,styled/* styled */.z)(MessageBarBase, getStyles, undefined, {\n    scope: 'MessageBar',\n});\n\n\n/***/ }),\n\n/***/ 8290:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"f\": function() { return /* binding */ MessageBarType; }\n/* harmony export */ });\n/**\n * {@docCategory MessageBar}\n */\nvar MessageBarType;\n(function (MessageBarType) {\n    /** Info styled MessageBar */\n    MessageBarType[MessageBarType[\"info\"] = 0] = \"info\";\n    /** Error styled MessageBar */\n    MessageBarType[MessageBarType[\"error\"] = 1] = \"error\";\n    /** Blocked styled MessageBar */\n    MessageBarType[MessageBarType[\"blocked\"] = 2] = \"blocked\";\n    /** SevereWarning styled MessageBar */\n    MessageBarType[MessageBarType[\"severeWarning\"] = 3] = \"severeWarning\";\n    /** Success styled MessageBar */\n    MessageBarType[MessageBarType[\"success\"] = 4] = \"success\";\n    /** Warning styled MessageBar */\n    MessageBarType[MessageBarType[\"warning\"] = 5] = \"warning\";\n})(MessageBarType || (MessageBarType = {}));\n\n\n/***/ }),\n\n/***/ 8262:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"U\": function() { return /* binding */ DelayedRender; }\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3499);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3370);\n/* harmony import */ var _dom_getWindow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6451);\n\n\n\n/**\n * Utility component for delaying the render of a child component after a given delay. This component\n * requires a single child component; don't pass in many components. Wrap multiple components in a DIV\n * if necessary.\n *\n * @public\n * {@docCategory DelayedRender}\n */\nvar DelayedRender = /** @class */ (function (_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_1__/* .__extends */ .ZT)(DelayedRender, _super);\n    function DelayedRender(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            isRendered: (0,_dom_getWindow__WEBPACK_IMPORTED_MODULE_2__/* .getWindow */ .J)() === undefined,\n        };\n        return _this;\n    }\n    DelayedRender.prototype.componentDidMount = function () {\n        var _this = this;\n        var delay = this.props.delay;\n        this._timeoutId = window.setTimeout(function () {\n            _this.setState({\n                isRendered: true,\n            });\n        }, delay);\n    };\n    DelayedRender.prototype.componentWillUnmount = function () {\n        if (this._timeoutId) {\n            clearTimeout(this._timeoutId);\n        }\n    };\n    DelayedRender.prototype.render = function () {\n        return this.state.isRendered ? react__WEBPACK_IMPORTED_MODULE_0__.Children.only(this.props.children) : null;\n    };\n    DelayedRender.defaultProps = {\n        delay: 0,\n    };\n    return DelayedRender;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component));\n\n\n\n/***/ })\n\n},\n/******/ function(__webpack_require__) { // webpackRuntimeModules\n/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }\n/******/ __webpack_require__.O(0, [774,888,179], function() { return __webpack_exec__(8663); });\n/******/ var __webpack_exports__ = __webpack_require__.O();\n/******/ _N_E = __webpack_exports__;\n/******/ }\n]);"],"names":["self","push","__unused_webpack_module","__unused_webpack_exports","__webpack_require__","window","__NEXT_P","__webpack_exports__","r","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","_fluentui_react__WEBPACK_IMPORTED_MODULE_7__","_fluentui_react__WEBPACK_IMPORTED_MODULE_8__","_fluentui_react__WEBPACK_IMPORTED_MODULE_9__","_fluentui_react__WEBPACK_IMPORTED_MODULE_10__","_fluentui_react__WEBPACK_IMPORTED_MODULE_11__","_yume_chan_android_bin__WEBPACK_IMPORTED_MODULE_1__","mobx__WEBPACK_IMPORTED_MODULE_6__","mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__","next_head__WEBPACK_IMPORTED_MODULE_3__","next_head__WEBPACK_IMPORTED_MODULE_3___default","n","_state__WEBPACK_IMPORTED_MODULE_4__","_utils__WEBPACK_IMPORTED_MODULE_5__","state","generateBugReport","bugReport","generate","pipeTo","yH","generateBugReportZStream","bugReportZ","stream","generateBugReportZ","z","bugReportZInProgress","filename","bugReportZVersion","supportProgress","aD","progress","total","bugReportZProgress","bugReportZTotalSize","undefined","sync","q","device","read","dispose","constructor","ky","LO","deep","bound","EH","gI","Qw","version","then","BugReportPage","ref","jsxs","K","LE","children","jsx","c","messageBarType","f","info","v","disabled","text","onClick","supportStream","horizontal","verticalAlign","tokens","childrenGap","Pi","d","MessageBar","_a","MessageBar_styles_a","_b","_c","styled","tslib_es6","react","classNamesFunction","properties","css","DelayedRender","IconButton","Icon","MessageBar_types","useBoolean","useId","ICON_MAP","warning","error","blocked","severeWarning","success","getClassNames","y","getAnnouncementPriority","getRole","MessageBarBase","forwardRef","props","k","expandSingleLine","toggleExpandSingleLine","toggle","labelId","M","actions","className","overflowButtonAriaLabel","dismissIconProps","styles","theme","onDismiss","_d","isMultiline","truncated","dismissButtonAriaLabel","messageBarIconProps","role","_e","delayedRender","expandButtonProps","nativeProps","pq","iY","classNames","actionsDiv","createElement","dismissButton","h","dismissal","iconProps","iconName","title","ariaLabel","pi","root","content","iconContainer","J","i","icon","id","innerText","U","expand","dismissSingleLine","displayName","lib","GlobalClassNames","multiline","singleline","dismissalSingleLine","expandingSingleLine","actionsSingleline","backgroundColor","highContrastBackgroundColor","iconColor","_f","semanticColors","fonts","SmallScreenSelector","sK","mV","Cn","dismissalAndExpandIconStyle","fontSize","ld","xSmall","height","lineHeight","color","messageText","selectors","qJ","xM","dismissalAndExpandStyle","GL","inset","highContrastStyle","outlineOffset","outline","borderColor","flexShrink","width","padding","medium","background","minHeight","display","wordBreak","messageLink","messageLinkHovered","border","flexDirection","minWidth","margin","flexGrow","small","marginRight","paddingLeft","overflow","whiteSpace","textOverflow","flexBasis","alignItems","forcedColorAdjust","MsHighContrastAdjust","marginLeft","marginBottom","scope","MessageBarType","tslib__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_0__","_dom_getWindow__WEBPACK_IMPORTED_MODULE_2__","_super","_this","call","isRendered","ZT","prototype","componentDidMount","delay","_timeoutId","setTimeout","setState","componentWillUnmount","clearTimeout","render","Children","only","defaultProps","Component","O","s","_N_E"],"sourceRoot":""}